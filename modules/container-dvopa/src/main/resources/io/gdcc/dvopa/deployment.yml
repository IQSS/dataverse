apiVersion: apps/v1
kind: Deployment
metadata:
  name: ""
  labels:
    app.kubernetes.io/name: dataverse
    app.kubernetes.io/instance: ""
    app.kubernetes.io/version: ""
    app.kubernetes.io/component: appserver
    app.kubernetes.io/part-of: dataverse
    app.kubernetes.io/managed-by: ""
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dataverse
      app.kubernetes.io/instance: ""
      app.kubernetes.io/managed-by: ""
      app.kubernetes.io/component: appserver
  replicas: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dataverse
        app.kubernetes.io/instance: ""
        app.kubernetes.io/managed-by: ""
        app.kubernetes.io/component: appserver
    spec:
      containers:
        - name: app
          image: ""
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /api/info/version
              port: 8080
          volumeMounts:
            - name: storage
              mountPath: /dv
            - name: docroot
              mountPath: /dv/docroot
            - name: uploads
              mountPath: /dv/uploads
            - name: config
              mountPath: /opt/payara/config
            - name: dvtemp
              mountPath: /dv/temp
            - name: tmp
              mountPath: /tmp
            - name: heapdumps
              mountPath: /dumps
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: dataverse-storage
        - name: docroot
          persistentVolumeClaim:
            claimName: dataverse-docroot
        - name: uploads
          persistentVolumeClaim:
            claimName: dataverse-uploads
        - name: config
          emptyDir: {}
        - name: dvtemp
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: heapdumps
          emptyDir: {}