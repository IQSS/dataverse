<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
    xmlns:jsf="http://xmlns.jcp.org/jsf"
    xmlns:pt="http://java.sun.com/jsf/passthrough"
    xmlns:cc="http://java.sun.com/jsf/composite"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">

    <!-- Download Button -->
    <ui:fragment rendered="#{fileDownloadHelper.canDownloadFile(fileMetadata)}">
    <!-- FILE PG -->
        <ui:fragment rendered="#{isFilePg}">
            <li class="dropdown-header">#{bundle['file.accessBtn.header.download']} <span class="glyphicon glyphicon-download-alt"/></li>
            <li jsf:rendered="#{!fileMetadata.dataFile.tabularData}">
                <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                        and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                             styleClass="btn-download" process="@this"
                             disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                             update="@widgetVar(downloadPackagePopup)" oncomplete="PF('downloadPackagePopup').show();handleResizeDialog('downloadPackagePopup');">
                    <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" />
                    <f:actionListener binding="#{fileDownloadService.writeGuestbookResponseRecord(guestbookResponse, fileMetadata, 'package')}" />
                    <!-- package data file: -->
                    <!-- no guest book/terms of use/etc. - straight package popup -->
                    #{bundle.download}
                </p:commandLink>
                <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and (downloadPopupRequired) 
                                        and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                             styleClass="btn-download"
                             process="@this"
                             disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                             action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'package')}"
                             update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" /> 
                    <!-- package data file: -->
                    <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
                    #{bundle.download}
                </p:commandLink>
                <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                          and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                             styleClass="btn-download"
                             process="@this"
                             disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                             actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'Download')}">
                    <!-- non-tabular data file: -->
                    <!-- no guest book/terms of use/etc. - straight to the download API url: -->
                    #{bundle.download}
                </p:commandLink>
                <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and downloadPopupRequired 
                                          and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                             styleClass="btn-download"
                             process="@this"
                             disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                             action="#{guestbookResponseService.modifyDatafile(guestbookResponse, fileMetadata)}"
                             update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
                    #{bundle.download}
                </p:commandLink>
            </li>
            <!-- SUBMENU LINK -->
            <ui:fragment rendered="#{fileMetadata.dataFile.tabularData}">
                <ui:remove>
                <li>
                    <p:commandLink styleClass="highlightBold btn-download" rendered="#{!(downloadPopupRequired)}"
                                   process="@this"
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'bundle')}">
                        #{bundle['file.downloadBtn.format.all']}
                    </p:commandLink>
                    <p:commandLink styleClass="highlightBold btn-download" rendered="#{downloadPopupRequired}"
                                   process="@this"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'bundle' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.all']}
                    </p:commandLink>
                </li>
                <li role="presentation" class="divider"></li>
                </ui:remove>
                <li>
                    <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'original')}">
                        <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                            <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                        </h:outputFormat>
                    </p:commandLink>
                    <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'original' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                            <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                        </h:outputFormat>
                    </p:commandLink>
                </li>
                <li>
                    <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'tab')}">
                        #{bundle['file.downloadBtn.format.tab']}
                    </p:commandLink>
                    <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired}"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'tab' )}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.tab']}
                    </p:commandLink>
                </li>
                <ui:fragment rendered="#{!(fileMetadata.dataFile.originalFormatLabel == 'RData')}">
                    <li>
                        <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'RData')}">
                            #{bundle['file.downloadBtn.format.rdata']}
                        </p:commandLink>
                        <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'RData' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.rdata']}
                        </p:commandLink>
                    </li>
                </ui:fragment>
                <li>
                    <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'var')}">
                        #{bundle['file.downloadBtn.format.var']}
                    </p:commandLink>
                    <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'var' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.var']}
                    </p:commandLink>
                </li>
                <li class="dropdown-submenu pull-left">
                    <a tabindex="-1" href="javascript:void(0);">#{bundle['file.downloadBtn.format.citation']}</a>
                    <ul class="dropdown-menu">
                        <li>
                            <h:commandLink styleClass="btn-download" actionListener="#{fileDownloadService.downloadDatafileCitationRIS(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.ris']}" />
                            </h:commandLink>
                        </li>
                        <li>
                            <h:commandLink styleClass="btn-download" action="#{fileDownloadService.downloadDatafileCitationXML(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.xml']}" />
                            </h:commandLink>
                        </li>
                        <li>
                            <h:commandLink styleClass="btn-download" action="#{fileDownloadService.downloadDatafileCitationBibtex(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.bib']}" />
                            </h:commandLink>
                        </li>
                    </ul>
                </li>
            </ui:fragment>
            <!-- END: SUBMENU LINK -->
            <!-- UI HACK FIX SUBMENU PULL-FLOAT FIX -->
            <li role="presentation" class="clearfix" jsf:rendered="#{isFilePg}"></li>
        </ui:fragment>
    <!-- END: FILE PG -->
    <!-- DATASET PG -->
        <ui:fragment rendered="#{!isFilePg}">
        <!-- DOWNLOAD LINKS -->
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                  and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                       styleClass="btn-download btn btn-link bootstrap-button-tooltip" 
                       title="#{bundle.download}"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       process="@this" update="@widgetVar(downloadPackagePopup)" oncomplete="PF('downloadPackagePopup').show();handleResizeDialog('downloadPackagePopup');">
            <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" />
            <f:actionListener binding="#{fileDownloadService.writeGuestbookResponseRecord(guestbookResponse, fileMetadata, 'package')}" />
            <!-- package data file: -->
            <!-- no guest book/terms of use/etc. - straight package popup -->
            <span class="glyphicon glyphicon-download-alt"/><span class="sr-only">#{bundle.download}</span>
        </p:commandLink>
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and (downloadPopupRequired) 
                                  and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                       styleClass="btn-download btn btn-link bootstrap-button-tooltip" 
                       title="#{bundle.download}"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'package')}"
                       process="@this" update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
            <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" /> 
            <!-- package data file: -->
            <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
            <span class="glyphicon glyphicon-download-alt"/><span class="sr-only">#{bundle.download}</span>
        </p:commandLink>
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                    and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                       styleClass="btn-download btn btn-link bootstrap-button-tooltip" 
                       title="#{bundle.download}"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       process="@this" actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'Download')}">
            <!-- non-tabular data file: -->
            <!-- no guest book/terms of use/etc. - straight to the download API url: -->
            <span class="glyphicon glyphicon-download-alt"/><span class="sr-only">#{bundle.download}</span>
        </p:commandLink>
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and downloadPopupRequired 
                                    and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                       styleClass="btn-download btn btn-link bootstrap-button-tooltip" 
                       title="#{bundle.download}"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       action="#{guestbookResponseService.modifyDatafile(guestbookResponse, fileMetadata)}"
                       process="@this" update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
            <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
            <span class="glyphicon glyphicon-download-alt"/><span class="sr-only">#{bundle.download}</span>
        </p:commandLink>
        <!-- END:DOWNLOAD LINKS -->
        <!-- TABULAR SUBMENU LINKS -->
        <div class="btn-group" jsf:rendered="#{fileMetadata.dataFile.tabularData}">
            <!-- Download Dropdown -->
            <a type="button" class="btn-download btn btn-link bootstrap-button-tooltip dropdown-toggle" 
                          title="#{bundle.download}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="glyphicon glyphicon-download-alt"/><span class="sr-only">#{bundle.download}</span><span class="caret"></span>
            </a>
            <ul class="dropdown-menu multi-level pull-right text-left">
                <ui:remove>
                    <li>
                        <p:commandLink styleClass="highlightBold" rendered="#{!(downloadPopupRequired)}"
                                       process="@this"
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'bundle')}">
                            #{bundle['file.downloadBtn.format.all']}
                        </p:commandLink>
                        <p:commandLink styleClass="highlightBold" rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'bundle' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.all']}
                        </p:commandLink>
                    </li>
                    <li role="presentation" class="divider"></li>
                </ui:remove>
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'original')}">
                        <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                            <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                        </h:outputFormat>
                    </p:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'original' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                            <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                        </h:outputFormat>
                    </p:commandLink>
                </li>
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'tab')}">
                        #{bundle['file.downloadBtn.format.tab']}
                    </p:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'tab' )}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.tab']}
                    </p:commandLink>
                </li>
                <ui:fragment rendered="#{!(fileMetadata.dataFile.originalFormatLabel == 'RData')}">
                    <li>
                        <p:commandLink rendered="#{!downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'RData')}">
                            #{bundle['file.downloadBtn.format.rdata']}
                        </p:commandLink>
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'RData' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.rdata']}
                        </p:commandLink>
                    </li>
                </ui:fragment>
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'var')}">
                        #{bundle['file.downloadBtn.format.var']}
                    </p:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'var' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.var']}
                    </p:commandLink>
                </li>
                <li class="dropdown-submenu pull-left">
                    <a tabindex="-1" href="javascript:void(0);">#{bundle['file.downloadBtn.format.citation']}</a>
                    <ul class="dropdown-menu">
                        <li>
                            <h:commandLink actionListener="#{fileDownloadService.downloadDatafileCitationRIS(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.ris']}" />
                            </h:commandLink>
                        </li>
                        <li>
                            <h:commandLink action="#{fileDownloadService.downloadDatafileCitationXML(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.xml']}" />
                            </h:commandLink>
                        </li>
                        <li>
                            <h:commandLink action="#{fileDownloadService.downloadDatafileCitationBibtex(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.bib']}" />
                            </h:commandLink>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <!-- END: TABULAR SUBMENU LINKS -->
        </ui:fragment>
    <!-- END: DATASET PG -->
    </ui:fragment>
    <!-- Download Button -->
    
    <!-- Request Access Button -->
    <ui:fragment rendered="#{!fileMetadata.datasetVersion.deaccessioned and !fileDownloadHelper.canDownloadFile(fileMetadata)
                             and fileMetadata.dataFile.owner.fileAccessRequest}">
        <!-- FILE PG -->
        <li class="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? 'disabled' : ''}"
            jsf:rendered="#{isFilePg}">
            <p:commandLink styleClass="btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                    and !requestAccessPopupRequired}"
                        process="@this"
                        actionListener="#{fileDownloadHelper.requestAccess(fileMetadata.dataFile)}"
                        update="@this"
                        disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
                #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
            </p:commandLink>
            <p:commandLink styleClass="btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                    and requestAccessPopupRequired}"
                        process="@this"
                        actionListener="#{fileDownloadHelper.addFileForRequestAccess(fileMetadata.dataFile)}"
                        onclick="PF('requestAccessPopup').show()"
                        id="requestAccessPopupLink"
                        disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
                
                <!-- TODO fix disabled styling span vs a -->
                
                #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
            </p:commandLink>
            <p:commandLink styleClass="btn-request" rendered="#{!fileDownloadHelper.session.user.authenticated }"
                        process="@this"
                        onclick="PF('accessSignUpLogIn_popup').show()">
                #{bundle['file.requestAccess']}
            </p:commandLink>
        </li>
        <!-- END: FILE PG -->
        <ui:fragment rendered="#{!isFilePg}">
        <!-- DATASET PG -->
        
        <!-- TODO - FIX UX INDICATOR YOUR REQUEST WAS SUBMITTED SINCE BTN LABEL IS NOW HIDDEN IN TITLE TOOLTIP
                        FIX, WITH CSS POINTER-EVENTS VS JQUERY WORKAROUND, BUT... PRIMEFACES COMMANDLINK DIASABLED EMPTY TITLE BUG ???? -->
        
        <p:commandLink styleClass="btn-request btn btn-link bootstrap-button-tooltip" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                              and !requestAccessPopupRequired}"
                       title="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}"
                       process="@this"
                       actionListener="#{fileDownloadHelper.requestAccess(fileMetadata.dataFile)}"
                       update="@this"
                       disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
            <span class="glyphicon glyphicon-bullhorn"/><span class="sr-only">#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}</span>
        </p:commandLink>
        <p:commandLink styleClass="btn-request btn btn-link bootstrap-button-tooltip" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                              and requestAccessPopupRequired}"
                       title="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}"
                       process="@this"
                       actionListener="#{fileDownloadHelper.addFileForRequestAccess(fileMetadata.dataFile)}"
                       onclick="PF('requestAccessPopup').show()"
                       id="requestAccessPopupButton"
                       disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
            <span class="glyphicon glyphicon-bullhorn"/><span class="sr-only">#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}</span>
        </p:commandLink>
        <p:commandLink styleClass="btn-request btn btn-link bootstrap-button-tooltip" rendered="#{!fileDownloadHelper.session.user.authenticated}"
                       title="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}"
                       process="@this"
                       onclick="PF('accessSignUpLogIn_popup').show()">
            <span class="glyphicon glyphicon-bullhorn"/><span class="sr-only">#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}</span>
        </p:commandLink>
        <!-- END: DATASET PG -->
        </ui:fragment>
    </ui:fragment>
    <!-- END: Request Access Button -->
    
    <!-- Explore button -->
    <ui:fragment rendered="#{fileDownloadHelper.canDownloadFile(fileMetadata) and not empty exploreTools or (worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
        <!--exploreTools is set as a ui:param by the file and dataset pages-->
        <!--Note that "WorldMap Explore" is not an explore tool (external tool)-->

        <!-- FILE PG -->
        <ui:fragment rendered="#{isFilePg}">
            <li class="dropdown-header">#{bundle['dataset.accessBtn.header.explore']} <span class="glyphicon glyphicon-equalizer"/></li>
            <!-- externalTools -->
            <ui:repeat var="tool" value="#{exploreTools}">
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired}"
                                   styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   action="#{fileDownloadService.explore(guestbookResponse, fileMetadata, tool )}">
                        #{tool.getDisplayNameLang()}
                    </p:commandLink>
                    <!--The modifyDatafileAndFormat method below was added because on the dataset page, "tool" is null in the popup so we store it in the guestbookResponse because we know we'll need it later in the popup.-->
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'externalTool', tool)}"
                                   styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload)}"
                                   process="@this"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{tool.getDisplayNameLang()}
                    </p:commandLink>
                </li>
            </ui:repeat>
            <!-- END: externalTools -->
            <!-- WorldMap -->
            <li jsf:rendered="#{worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)}">
                <h:commandLink rendered="#{!downloadPopupRequired}"
                               styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                               action="#{fileDownloadService.startWorldMapDownloadLink(guestbookResponse, fileMetadata )}" 
                               target="_blank" rel="noopener">
                    #{bundle['file.mapData.worldMap']}
                </h:commandLink>
                <p:commandLink rendered="#{downloadPopupRequired}"
                               styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                               disabled="#{fileMetadata.dataFile.ingestInProgress or lockedFromDownload}"
                               process="@this"
                               action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'worldMap' )}"
                               update="@widgetVar(downloadPopup)"
                               oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    #{bundle['file.mapData.worldMap']}
                </p:commandLink>
            </li>
            <!-- END: WorldMap -->
        </ui:fragment>
        <!-- END: FILE PG -->
        
        <!-- DATASET PG -->
        <div class="btn-group" jsf:rendered="#{!isFilePg}">
            <ui:fragment rendered="#{(exploreTools.size()==1 and !worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)) or (exploreTools.size()==0 and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
                <a class="btn-explore btn btn-link bootstrap-button-tooltip" 
                               title="#{bundle.explore}" onclick="$(this).parent().find( 'li > a' ).trigger( 'click' );">
                    <span class="glyphicon glyphicon-equalizer"/><span class="sr-only">#{bundle.explore}</span>
                </a>
            </ui:fragment>
            <ui:fragment rendered="#{exploreTools.size()>1 or (exploreTools.size()>=1 and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
                <a class="btn-explore btn btn-link bootstrap-button-tooltip dropdown-toggle" 
                               title="#{bundle.explore}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="glyphicon glyphicon-equalizer"/><span class="sr-only">#{bundle.explore}</span><span class="caret"></span>
                </a>
            </ui:fragment>
            <ul class="dropdown-menu multi-level pull-right text-left">
                <!--external tools-->
                <ui:repeat var="tool" value="#{exploreTools}">
                    <li>
                        <p:commandLink rendered="#{!downloadPopupRequired}"
                                       styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       action="#{fileDownloadService.explore(guestbookResponse, fileMetadata, tool )}">
                            #{tool.getDisplayNameLang()}
                        </p:commandLink>
                        <!--The modifyDatafileAndFormat method below was added because on the dataset page, "tool" is null in the popup so we store it in the guestbookResponse because we know we'll need it later in the popup.-->
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'externalTool', tool)}"
                                       styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       process="@this"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{tool.getDisplayNameLang()}
                        </p:commandLink>
                    </li>
                </ui:repeat>
                <!--WorldMap Explore-->
                <li jsf:rendered="#{worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)}">
                    <h:commandLink rendered="#{!downloadPopupRequired}"
                                   styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   action="#{fileDownloadService.startWorldMapDownloadLink(guestbookResponse, fileMetadata )}" 
                                   target="_blank" rel="noopener">
                        #{bundle['file.mapData.worldMap']}
                    </h:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{fileMetadata.dataFile.ingestInProgress or lockedFromDownload}"
                                   process="@this"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'worldMap' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.mapData.worldMap']}
                    </p:commandLink>
                </li>
            </ul>
        </div>
        <!-- END: DATASET PG -->
    </ui:fragment>
    <!-- Explore button -->

    <!-- Compute Button *FILE PG only*: -->
    <li jsf:rendered="#{isFilePg and FilePage.showComputeButton() and fileDownloadHelper.canDownloadFile(fileMetadata)}">
        <h:outputLink value="#{FilePage.computeUrl}" styleClass="btn-compute" 
                      target="_blank" rel="noopener">
            #{bundle['file.compute']}
        </h:outputLink>
    </li>
    <!-- END: Compute Button *FILE PG only*: -->
 
    <!-- Compute Button *DATASET PG only*: -->
    <h:outputLink styleClass="btn-compute btn btn-link bootstrap-button-tooltip" 
                  title="#{bundle['file.compute']}" value="#{DatasetPage.getComputeUrl(fileMetadata)}"
                  target="_blank" rel="noopener"
                  rendered="#{!isFilePg and DatasetPage.showComputeButton(fileMetadata) and fileDownloadHelper.canDownloadFile(fileMetadata)}"> 
        <span class="glyphicon glyphicon-flash"/><span class="sr-only">#{bundle['file.compute']}</span>
    </h:outputLink>
    <!-- END: Compute Button *DATASET PG only*: -->
</ui:composition>