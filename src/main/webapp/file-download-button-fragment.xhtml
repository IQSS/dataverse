<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
    xmlns:jsf="http://xmlns.jcp.org/jsf"
    xmlns:pt="http://java.sun.com/jsf/passthrough"
    xmlns:cc="http://java.sun.com/jsf/composite"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">

    <!-- Download Options -->
    <ui:fragment rendered="#{fileDownloadHelper.canDownloadFile(fileMetadata)}">
        <li class="dropdown-header">#{bundle['file.accessBtn.header.download']} <span class="glyphicon glyphicon-download-alt"/></li>
        <li jsf:rendered="#{!fileMetadata.dataFile.tabularData}">
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                    and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                         styleClass="btn-download" process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         update="@widgetVar(downloadPackagePopup)" oncomplete="PF('downloadPackagePopup').show();handleResizeDialog('downloadPackagePopup');">
                <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" />
                <f:actionListener binding="#{fileDownloadService.writeGuestbookResponseRecord(guestbookResponse, fileMetadata, 'package')}" />
                <!-- package data file: -->
                <!-- no guest book/terms of use/etc. - straight package popup -->
                #{bundle.download}
            </p:commandLink>
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and (downloadPopupRequired) 
                                    and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                         styleClass="btn-download"
                         process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'package')}"
                         update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" /> 
                <!-- package data file: -->
                <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
                #{bundle.download}
            </p:commandLink>
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                      and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                         styleClass="btn-download"
                         process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'Download')}">
                <!-- non-tabular data file: -->
                <!-- no guest book/terms of use/etc. - straight to the download API url: -->
                #{bundle.download}
            </p:commandLink>
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and downloadPopupRequired 
                                      and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                         styleClass="btn-download"
                         process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         action="#{guestbookResponseService.modifyDatafile(guestbookResponse, fileMetadata)}"
                         update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
                #{bundle.download}
            </p:commandLink>
        </li>
        <!-- SUBMENU LINK -->
        <ui:fragment rendered="#{fileMetadata.dataFile.tabularData}">
            <ui:remove>
            <li>
                <p:commandLink styleClass="highlightBold btn-download" rendered="#{!(downloadPopupRequired)}"
                               process="@this"
                               actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'bundle')}">
                    #{bundle['file.downloadBtn.format.all']}
                </p:commandLink>
                <p:commandLink styleClass="highlightBold btn-download" rendered="#{downloadPopupRequired}"
                               process="@this"
                               action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'bundle' )}"
                               update="@widgetVar(downloadPopup)"
                               oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    #{bundle['file.downloadBtn.format.all']}
                </p:commandLink>
            </li>
            <li role="presentation" class="divider"></li>
            </ui:remove>
            <li>
                <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                               process="@this"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                               actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'original')}">
                    <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                        <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                    </h:outputFormat>
                </p:commandLink>
                <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                               process="@this"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                               action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'original' )}"
                               update="@widgetVar(downloadPopup)"
                               oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                        <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                    </h:outputFormat>
                </p:commandLink>
            </li>
            <li>
                <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired}"
                               process="@this"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                               actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'tab')}">
                    #{bundle['file.downloadBtn.format.tab']}
                </p:commandLink>
                <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired}"
                               action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'tab' )}"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                               update="@widgetVar(downloadPopup)"
                               oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    #{bundle['file.downloadBtn.format.tab']}
                </p:commandLink>
            </li>
            <ui:fragment rendered="#{!(fileMetadata.dataFile.originalFormatLabel == 'RData')}">
                <li>
                    <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'RData')}">
                        #{bundle['file.downloadBtn.format.rdata']}
                    </p:commandLink>
                    <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'RData' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.rdata']}
                    </p:commandLink>
                </li>
            </ui:fragment>
            <li>
                <p:commandLink styleClass="btn-download" rendered="#{!downloadPopupRequired}"
                               process="@this"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                               actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'var')}">
                    #{bundle['file.downloadBtn.format.var']}
                </p:commandLink>
                <p:commandLink styleClass="btn-download" rendered="#{downloadPopupRequired}"
                               process="@this"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                               action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'var' )}"
                               update="@widgetVar(downloadPopup)"
                               oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    #{bundle['file.downloadBtn.format.var']}
                </p:commandLink>
            </li>
            <li class="dropdown-submenu pull-left">
                <a tabindex="-1" href="javascript:void(0);">#{bundle['file.downloadBtn.format.citation']}</a>
                <ul class="dropdown-menu">
                    <li>
                        <h:commandLink styleClass="btn-download" actionListener="#{fileDownloadService.downloadDatafileCitationRIS(fileMetadata)}">
                            <h:outputText value="#{bundle['dataset.cite.downloadBtn.ris']}" />
                        </h:commandLink>
                    </li>
                    <li>
                        <h:commandLink styleClass="btn-download" action="#{fileDownloadService.downloadDatafileCitationXML(fileMetadata)}">
                            <h:outputText value="#{bundle['dataset.cite.downloadBtn.xml']}" />
                        </h:commandLink>
                    </li>
                    <li>
                        <h:commandLink styleClass="btn-download" action="#{fileDownloadService.downloadDatafileCitationBibtex(fileMetadata)}">
                            <h:outputText value="#{bundle['dataset.cite.downloadBtn.bib']}" />
                        </h:commandLink>
                    </li>
                </ul>
            </li>
        </ui:fragment>
        <!-- END: SUBMENU LINK -->
        <!-- UI HACK FIX SUBMENU PULL-FLOAT FIX -->
        <li role="presentation" class="clearfix"></li>
    </ui:fragment>
    <!-- Download Options -->
    
    <!-- Request Access Options -->
    <ui:fragment rendered="#{!fileMetadata.datasetVersion.deaccessioned and !fileDownloadHelper.canDownloadFile(fileMetadata)
                             and fileMetadata.dataFile.owner.fileAccessRequest}">
        <li class="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? 'disabled' : ''}">
            <p:commandLink styleClass="btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                    and !requestAccessPopupRequired}"
                        process="@this"
                        actionListener="#{fileDownloadHelper.requestAccess(fileMetadata.dataFile)}"
                        update="@this"
                        disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
                #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
            </p:commandLink>
            <p:commandLink styleClass="btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                    and requestAccessPopupRequired}"
                        process="@this"
                        actionListener="#{fileDownloadHelper.addFileForRequestAccess(fileMetadata.dataFile)}"
                        onclick="PF('requestAccessPopup').show()"
                        id="requestAccessPopupLink"
                        disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
                
                <!-- TODO fix disabled styling span vs a -->
                
                #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
            </p:commandLink>
            <p:commandLink styleClass="btn-request" rendered="#{!fileDownloadHelper.session.user.authenticated }"
                        process="@this"
                        onclick="PF('accessSignUpLogIn_popup').show()">
                #{bundle['file.requestAccess']}
            </p:commandLink>
        </li>
    </ui:fragment>
    <!-- END: Request Access Options -->
    
    <!-- Explore Options -->
    <ui:fragment rendered="#{fileDownloadHelper.canDownloadFile(fileMetadata) and not empty exploreTools or (worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
        <!--exploreTools is set as a ui:param by the file and dataset pages-->
        <!--Note that "WorldMap Explore" is not an explore tool (external tool)-->
        <li class="dropdown-header">#{bundle['dataset.accessBtn.header.explore']} <span class="glyphicon glyphicon-equalizer"/></li>
        <!-- externalTools -->
        <ui:repeat var="tool" value="#{exploreTools}">
            <li>
                <p:commandLink rendered="#{!downloadPopupRequired}"
                               styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                               action="#{fileDownloadService.explore(guestbookResponse, fileMetadata, tool )}">
                    #{tool.getDisplayNameLang()}
                </p:commandLink>
                <!--The modifyDatafileAndFormat method below was added because on the dataset page, "tool" is null in the popup so we store it in the guestbookResponse because we know we'll need it later in the popup.-->
                <p:commandLink rendered="#{downloadPopupRequired}"
                               action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'externalTool', tool)}"
                               styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                               disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload)}"
                               process="@this"
                               update="@widgetVar(downloadPopup)"
                               oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                    #{tool.getDisplayNameLang()}
                </p:commandLink>
            </li>
        </ui:repeat>
        <!-- END: externalTools -->
        <!-- WorldMap -->
        <li jsf:rendered="#{worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)}">
            <h:commandLink rendered="#{!downloadPopupRequired}"
                           styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                           disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                           action="#{fileDownloadService.startWorldMapDownloadLink(guestbookResponse, fileMetadata )}" 
                           target="_blank" rel="noopener">
                #{bundle['file.mapData.worldMap']}
            </h:commandLink>
            <p:commandLink rendered="#{downloadPopupRequired}"
                           styleClass="btn-explore #{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                           disabled="#{fileMetadata.dataFile.ingestInProgress or lockedFromDownload}"
                           process="@this"
                           action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'worldMap' )}"
                           update="@widgetVar(downloadPopup)"
                           oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                #{bundle['file.mapData.worldMap']}
            </p:commandLink>
        </li>
        <!-- END: WorldMap -->
    </ui:fragment>
    <!-- Explore Options -->

    <!-- Compute Options -->
    <ui:fragment rendered="#{(isFilePg ? FilePage.showComputeButton() : DatasetPage.showComputeButton(fileMetadata)) and fileDownloadHelper.canDownloadFile(fileMetadata)}">
        <li class="dropdown-header">#{bundle['dataset.accessBtn.header.compute']} <span class="glyphicon glyphicon-flash"/></li>
        <li>
            <h:outputLink value="#{isFilePg ? FilePage.computeUrl : DatasetPage.getComputeUrl(fileMetadata)}" styleClass="btn-compute" 
                          target="_blank" rel="noopener">
                #{bundle['file.compute']}
            </h:outputLink>
        </li>
    </ui:fragment>
    <!-- END: Compute Options -->
</ui:composition>