<ui:composition xmlns="http://www.w3.org/1999/xhtml"
     xmlns:h="http://java.sun.com/jsf/html"
     xmlns:f="http://java.sun.com/jsf/core"
     xmlns:ui="http://java.sun.com/jsf/facelets"
     xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:p="http://primefaces.org/ui"
     xmlns:o="http://omnifaces.org/ui"
     xmlns:jsf="http://xmlns.jcp.org/jsf">

    <c:set var="page" value="/dataverse/#{SearchIncludeFragment.dataverse.alias}"/>

    <!-- Search Form + Add Data Button -->
    <div class="row panelSearchForm" jsf:rendered="#{!SearchIncludeFragment.solrIsDown}">
        <div class="#{widgetWrapper.widgetView ? 'col-sm-12' : 'col-sm-8'}">
            <h:form>
                <p:inputText id="searchBasic" styleClass="search-input" size="40" value="#{SearchIncludeFragment.query}" onkeypress="if (event.keyCode == 13) { submitsearch(); return false; }"/>
                <p:watermark for="searchBasic" value="#{dataverseRedirectPage == 'dataverseuser.xhtml' ? bundle['account.search.input.watermark'] : bundle['dataverse.search.input.watermark']}"/>
                <p:commandLink id="searchbutton" styleClass="btn btn-default" action="#{SearchIncludeFragment.searchRedirect(dataverseRedirectPage)}">
                    <span class="glyphicon glyphicon-search"/> #{bundle['dataverse.search.btn.find']}
                </p:commandLink>
                <p:remoteCommand name="submitsearch" action="#{SearchIncludeFragment.searchRedirect(dataverseRedirectPage)}"/>
                <h:outputLink id="advsearchlink" value="#{widgetWrapper.wrapURL('/search/advanced.xhtml')}">
                    <f:param name="dataverseIdentifier" value="#{SearchIncludeFragment.dataverse.alias}"/>
                    <h:outputText value="#{bundle['dataverse.search.advancedSearch']}"/>
                    <!--<f:param name="q" value="#{SearchIncludeFragment.query}" disable="#{empty SearchIncludeFragment.query}"/>-->
                </h:outputLink>
            </h:form>
        </div>
        <div class="col-sm-4 text-right col-manage-action" jsf:rendered="#{!widgetWrapper.widgetView}">
            <div class="button-block pull-right">
                <!-- ADD DATA -->
                <o:importFunctions type="edu.harvard.iq.dataverse.authorization.groups.impl.builtin.AuthenticatedUsers" />
                <ui:fragment rendered="#{!dataverseSession.user.authenticated and (permissionServiceBean.userOn(AuthenticatedUsers:get(),SearchIncludeFragment.dataverse).canIssueCommand('CreateDataverseCommand')
                                         or permissionServiceBean.userOn(AuthenticatedUsers:get(),SearchIncludeFragment.dataverse).canIssueCommand('CreateDatasetCommand'))}">
                    <button type="button" class="btn btn-default" onclick="PF('addData_popup').show()">
                        <span class="glyphicon glyphicon-plus"/> #{bundle['dataverse.results.btn.addData']}
                    </button>
                </ui:fragment>
                <h:form id="shareForm" class="btn-form"
                        rendered="#{dataverseSession.user.authenticated and (permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse)
                                     or permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse))}">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-plus"/> #{bundle['dataverse.results.btn.addData']} <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu pull-right text-left" role="menu">
                            <ui:fragment rendered="#{permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse) }">
                                <li><a href="/dataverse.xhtml?ownerId=#{SearchIncludeFragment.dataverse.id}">#{bundle['dataverse.results.btn.addData.newDataverse']}</a></li>
                            </ui:fragment>
                            <ui:fragment rendered="#{permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse) }">
                                <li><a href="/dataset.xhtml?ownerId=#{SearchIncludeFragment.dataverse.id}">#{bundle['dataverse.results.btn.addData.newDataset']}</a></li>
                            </ui:fragment>
                        </ul>
                    </div>
                </h:form>
            </div>
        </div>
    </div>

    <!-- Message Block / SOLR IS DOWN -->
    <div class="row" jsf:rendered="#{SearchIncludeFragment.solrIsDown}">
        <div class="col-sm-12">
            <div class="bg-danger padding-12 margin-bottom">
                <span class="glyphicon glyphicon-warning-sign text-danger"/>&#160;

                <h:outputText value="#{SearchIncludeFragment.searchException.message}" styleClass="text-danger highlightBold"/>

                <h:outputText value=" - #{bundle['dataverse.results.solrIsDown']}" styleClass="text-danger"/>
            </div>
            <pre><h:outputText value="#{SearchIncludeFragment.searchException.cause.message}"/></pre>
        </div>
    </div>

    <!-- Search Results / SOLR IS UP -->
    <div id="search-row-panel" class="row row-offcanvas row-offcanvas-left" jsf:rendered="#{!SearchIncludeFragment.solrIsDown}">
        <div id="dv-sidebar" class="col-sm-4 col-md-3 sidebar-offcanvas">
            <!--TYPE FACET (DATAVERSES, DATASETS, FILES)-->
            <h:form id="facetType">
                <!--DATAVERSE TOGGLE-->
                <div class="clearfix">
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetTypeChBox facetLink #{SearchIncludeFragment.selectedTypesList.contains('dataverses') ? 'facetSelected': ''}" disabled="#{SearchIncludeFragment.getNewSelectedTypes('dataverses') == null}">
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <f:param name="types" value="#{SearchIncludeFragment.getNewSelectedTypes('dataverses')}"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        <f:param name="page" value="1"/>
                        <p:selectBooleanCheckbox value="#{SearchIncludeFragment.selectedTypesList.contains('dataverses') ? true : false}" disabled="#{SearchIncludeFragment.getNewSelectedTypes('dataverses') == null ? true : false}"/>
                    </h:outputLink>
                    <!--DATAVERSES ONLY-->
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" disabled="#{false}" styleClass="facetTypeLink chkbox-label-margin #{SearchIncludeFragment.selectedTypesList.contains('dataverses') ? 'facetSelected': ''}">
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <f:param name="types" value="dataverses"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        <f:param name="page" value="1"/>

                        <i class="icon-dataverse text-icon-inline"></i>

                        <h:outputFormat styleClass="facetTypeDataverse" value="#{bundle['dataverse.results.types.dataverses']} &#40;{0}&#41;">
                            <f:param value="#{SearchIncludeFragment.facetCountDataverses}"/>
                        </h:outputFormat>
                    </h:outputLink>
                </div>
                <!--DATASETS TOGGLE-->
                <div class="clearfix">
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetTypeChBox facetLink #{SearchIncludeFragment.selectedTypesList.contains('datasets') ? 'facetSelected': ''}" disabled="#{SearchIncludeFragment.getNewSelectedTypes('datasets') == null}">
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <f:param name="types" value="#{SearchIncludeFragment.getNewSelectedTypes('datasets')}"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        <f:param name="page" value="1"/>
                        <p:selectBooleanCheckbox value="#{SearchIncludeFragment.selectedTypesList.contains('datasets') ? true : false}" disabled="#{SearchIncludeFragment.getNewSelectedTypes('datasets') == null ? true : false}"/>
                    </h:outputLink>
                    <!--DATASETS ONLY-->
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" disabled="#{false}" styleClass="facetTypeLink chkbox-label-margin #{SearchIncludeFragment.selectedTypesList.contains('datasets') ? 'facetSelected': ''}">
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <f:param name="types" value="datasets"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        <f:param name="page" value="1"/>

                        <i class="icon-dataset text-icon-inline"></i>

                        <h:outputFormat styleClass="facetTypeDataset" value="#{bundle['dataverse.results.types.datasets']} &#40;{0}&#41;">
                            <f:param value="#{SearchIncludeFragment.facetCountDatasets}"/>
                        </h:outputFormat>
                    </h:outputLink>
                </div>
                <!--FILES TOGGLE-->
                <div class="clearfix">
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetTypeChBox facetLink #{SearchIncludeFragment.selectedTypesList.contains('files') ? 'facetSelected': ''}" disabled="#{SearchIncludeFragment.getNewSelectedTypes('files') == null}">
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <f:param name="types" value="#{SearchIncludeFragment.getNewSelectedTypes('files')}"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        <f:param name="page" value="1"/>
                        <p:selectBooleanCheckbox value="#{SearchIncludeFragment.selectedTypesList.contains('files') ? true : false}" disabled="#{SearchIncludeFragment.getNewSelectedTypes('files') == null ? true : false}"/>
                    </h:outputLink>
                    <!--FILES ONLY-->
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" disabled="#{false}" styleClass="facetTypeLink chkbox-label-margin #{SearchIncludeFragment.selectedTypesList.contains('files') ? 'facetSelected': ''}">
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <f:param name="types" value="files"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                        </c:forEach>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        <f:param name="page" value="1"/>

                        <i class="icon-file text-icon-inline"></i>

                        <h:outputFormat styleClass="facetTypeFile" value="#{bundle['dataverse.results.types.files']} &#40;{0}&#41;">
                            <f:param value="#{SearchIncludeFragment.facetCountFiles}"/>
                        </h:outputFormat>
                    </h:outputLink>
                </div>
            </h:form>

            <!--NON-TYPE FACETS-->
            <h:form id="facetCategoryForm" rendered="#{SearchIncludeFragment.searchResultsCount > 0}">
                <p:dataList id="facetCategoryList" value="#{SearchIncludeFragment.facetCategoryList}" var="facetCategory">
                    <h:outputText value="#{facetCategory.friendlyName}" styleClass="facetCategoryName"/>
                    <p:dataList value="#{facetCategory.facetLabel}" var="facetLabel" rows="#{SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5)}">
                        <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{!SearchIncludeFragment.filterQueries.contains(facetLabel.filterQuery)}" styleClass="facetLink">
                            <h:outputFormat value="#{facetLabel.name} &#40;{0}&#41;">
                                <f:param value="#{facetLabel.count}"/>
                            </h:outputFormat>
                            <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                            <f:param name="fq#{SearchIncludeFragment.filterQueries.size()}" value="#{facetLabel.filterQuery}"/>
                            <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                            </c:forEach>
                            <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                            <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                            <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        </h:outputLink>

                        <h:outputLink value="#{widgetWrapper.wrapURL(page)}" rendered="#{SearchIncludeFragment.filterQueries.contains(facetLabel.filterQuery)}" styleClass="facetLink facetSelected">
                            <h:outputFormat value="#{facetLabel.name} &#40;{0}&#41;">
                                <f:param value="#{facetLabel.count}"/>
                            </h:outputFormat>
                            <span class="glyphicon glyphicon-remove"></span>
                            <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                            <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                <f:param name="fq#{status.index}" value='#{clickedFilterQuery}' disable="#{clickedFilterQuery == facetLabel.filterQuery}"/>
                            </c:forEach>
                            <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                            <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                            <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                        </h:outputLink>
                    </p:dataList>
                    <ui:fragment rendered="#{facetCategory.name != SearchIncludeFragment.searchFieldType and facetCategory.name != SearchIncludeFragment.searchFieldSubtree}">
                        <p:panelGrid styleClass="facetsMoreLess" columns="2" rendered="#{(SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5) lt facetCategory.facetLabel.size()) or (SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5) gt 5)}">
                            <ui:fragment>
                                <p:commandLink actionListener="#{SearchIncludeFragment.incrementFacets(facetCategory.name,-5)}" update="facetCategoryList" rendered="#{SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5) gt 5}">#{bundle.less}</p:commandLink>
                            </ui:fragment>
                            <ui:fragment>
                                <p:commandLink actionListener="#{SearchIncludeFragment.incrementFacets(facetCategory.name,5)}" update="facetCategoryList" rendered="#{SearchIncludeFragment.getNumberOfFacets(facetCategory.name,5) lt facetCategory.facetLabel.size()}">#{bundle.more}</p:commandLink>
                            </ui:fragment>
                        </p:panelGrid>
                    </ui:fragment>
                </p:dataList>
            </h:form>
        </div>
        <ui:param name="dataversePage" value="#{dataverseLinksStayOnPage == true ? '' : '/dataverse.xhtml' }"/>
        <div id="dv-main" class="col-sm-8 col-md-9">
            <!--DEBUG BEGIN-->
            <div jsf:rendered="#{SearchIncludeFragment.debug}" style="background-color: lightgray">
                <tt>
                    <h:outputText value="mode:#{SearchIncludeFragment.mode} "/>
                    <h:outputText value="sort=#{SearchIncludeFragment.sortField}:#{SearchIncludeFragment.sortOrder}"/><br/>
                    <h:outputText value="#{SearchIncludeFragment.filterQueriesDebug}"/><br/>
                    <h:outputText value="solrIsDown=#{SearchIncludeFragment.solrIsDown}"/><br/>
                    <h:outputText value="errorFromSolr: #{SearchIncludeFragment.errorFromSolr}" rendered="#{SearchIncludeFragment.errorFromSolr != null}"/>
                </tt>
            </div>
            <!--DEBUG END-->

            <!--toggle sidebar button-->
            <p class="visible-xs-block">
              <button type="button" class="btn btn-primary btn-xs" data-toggle="offcanvas"><i class="glyphicon glyphicon-chevron-left"></i> Filter Results</button>
            </p>

            <div id="emptyResults" class="emptyResults bg-warning" jsf:rendered="#{SearchIncludeFragment.searchResultsList.size() == 0}">
                <ui:fragment rendered="#{SearchIncludeFragment.mode == SearchIncludeFragment.searchModeString}">
                    <!--THIS IS EMPTY / SEARCH-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--SEARCH ZERO COUNTS-->
                        <p><h:outputFormat value="#{bundle['dataverse.results.empty.zero']}" escape="false">
                                <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                <f:param value="#{systemConfig.version}"/>
                            </h:outputFormat></p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--SEARCH HIDDEN-->
                        <p><h:outputFormat value="#{bundle['dataverse.results.empty.hidden']}" escape="false">
                                <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                <f:param value="#{systemConfig.version}"/>
                            </h:outputFormat></p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.errorFromSolr != null}">
                        <p>
                            <a data-toggle="collapse" data-parent="#emptyResults" href="#technicalDetails" aria-expanded="true" aria-controls="technicalDetails">[+] #{bundle['dataverse.results.empty.link.technicalDetails']}</a>
                        </p>
                        <div id="technicalDetails" class="collapse">
                            <pre><h:outputText value="#{SearchIncludeFragment.errorFromSolr}"/></pre>
                        </div>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{!dataverseSession.user.authenticated and SearchIncludeFragment.mode == SearchIncludeFragment.browseModeString}">
                    <!--THIS IS EMPTY / BROWSE / GUEST-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--BROWSE GUEST ZERO COUNTS-->
                        <p>
                            <h:outputFormat value="#{bundle['dataverse.results.empty.browse.guest.zero']}" escape="false">
                                <f:param value="#{navigationWrapper.redirectPage}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--BROWSE GUEST HIDDEN-->
                        <p>
                            <h:outputFormat value="#{bundle['dataverse.results.empty.browse.guest.hidden']}" escape="false">
                                <f:param value="#{navigationWrapper.redirectPage}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{dataverseSession.user.authenticated and !(permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse) or permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse)) and SearchIncludeFragment.mode == SearchIncludeFragment.browseModeString}">
                    <!--THIS IS EMPTY / BROWSE / LOGGED IN / NO PERMS-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--BROWSE NO_ADD_BUTTON ZERO COUNTS-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.noperms.zero']}</p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--BROWSE NO_ADD_BUTTON HIDDEN-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.noperms.hidden']}</p>
                    </ui:fragment>
                </ui:fragment>
                <ui:fragment rendered="#{dataverseSession.user.authenticated and (permissionsWrapper.canIssueCreateDataverseCommand(SearchIncludeFragment.dataverse) or permissionsWrapper.canIssueCreateDatasetCommand(SearchIncludeFragment.dataverse)) and SearchIncludeFragment.mode == SearchIncludeFragment.browseModeString}">
                    <!--THIS IS EMPTY / BROWSE / LOGGED IN / PERMS-->
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses eq 0 and SearchIncludeFragment.facetCountDatasets eq 0 and SearchIncludeFragment.facetCountFiles eq 0}">
                        <!--BROWSE CAN_ADD ZERO COUNTS-->
                        <p>
                            <h:outputFormat value="#{dataverseRedirectPage == 'dataverseuser.xhtml' ? bundle['account.results.empty.browse.loggedin.perms.zero'] : bundle['dataverse.results.empty.browse.loggedin.perms.zero']}" escape="false">
                                <f:param value="#{settingsWrapper.guidesBaseUrl}"/>
                                <f:param value="#{systemConfig.version}"/>
                            </h:outputFormat>
                        </p>
                    </ui:fragment>
                    <ui:fragment rendered="#{SearchIncludeFragment.facetCountDataverses gt 0 or SearchIncludeFragment.facetCountDatasets gt 0 or SearchIncludeFragment.facetCountFiles gt 0}">
                        <!--BROWSE CAN_ADD HIDDEN-->
                        <p>#{bundle['dataverse.results.empty.browse.loggedin.perms.hidden']}</p>
                    </ui:fragment>
                </ui:fragment>
            </div>

            <div id="resultsFacetsTopBlock" jsf:rendered="#{!empty SearchIncludeFragment.filterQueries}">
                <ui:repeat value="#{SearchIncludeFragment.filterQueries}" var="filterQuery">
                    <ui:param name="friendlyNames" value="#{SearchIncludeFragment.getFriendlyNamesFromFilterQuery(filterQuery)}"/>
                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}" styleClass="facetLink facetSelected">
                        <h:outputText value="#{friendlyNames.get(0)}: #{friendlyNames.get(1)}"/> <span class="glyphicon glyphicon-remove"></span>
                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}' disable="#{clickedFilterQuery == filterQuery}"/>
                        </c:forEach>
                        <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                        <f:param name="sort" value="#{SearchIncludeFragment.sortField}"/>
                        <f:param name="order" value="#{SearchIncludeFragment.sortOrder}"/>
                    </h:outputLink>
                </ui:repeat>
            </div>

            <div id="resultsCountPaginatorBlock" class="row" jsf:rendered="#{SearchIncludeFragment.searchResultsCount > 0}">
                <!-- RESULTS COUNT -->
                <div class="results-count col-xs-6">
                    <h:outputFormat value="#{bundle['dataverse.results.count.toofresults']}">
                        <f:param value="#{SearchIncludeFragment.paginationGuiStart}"/>
                        <f:param value="#{SearchIncludeFragment.paginationGuiEnd}"/>
                        <f:param value="#{SearchIncludeFragment.searchResultsCount}"/>
                    </h:outputFormat>
                </div>
                <!-- SORT + PAGINATOR -->
                <div class="results-sort-pagination col-xs-6">
                    <!-- SORT BY -->
                    <div class="btn-group pull-right">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-sort"/> #{bundle['dataverse.results.btn.sort']} <span class="caret"/>
                        </button>
                        <ul class="dropdown-menu pull-right text-left" role="menu">
                            <li>
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.nameAZ']}" styleClass="#{SearchIncludeFragment.sortedByNameAsc ? 'highlightBold' : ''}"/>
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldNameSort}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.ASCENDING}"/>
                                </h:outputLink>
                            </li>
                            <li>
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.nameZA']}" styleClass="#{SearchIncludeFragment.sortedByNameDesc ? 'highlightBold' : ''}"/>
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldNameSort}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.DESCENDING}"/>
                                </h:outputLink>
                            </li>
                            <li>
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.newest']}" styleClass="#{SearchIncludeFragment.sortedByReleaseDateDesc? 'highlightBold' : ''}"/>
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldReleaseOrCreateDate}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.DESCENDING}"/>
                                </h:outputLink>
                            </li>
                            <li>
                                <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                    <h:outputText value="#{bundle['dataverse.results.btn.sort.option.oldest']}" styleClass="#{SearchIncludeFragment.sortedByReleaseDateAsc? 'highlightBold' : ''}"/>
                                    <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                    <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                        <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                    </c:forEach>
                                    <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                    <f:param name="page" value="1"/>
                                    <f:param name="sort" value="#{SearchIncludeFragment.searchFieldReleaseOrCreateDate}"/>
                                    <f:param name="order" value="#{SearchIncludeFragment.ASCENDING}"/>
                                </h:outputLink>
                            </li>
                            <ui:fragment rendered="#{SearchIncludeFragment.mode == SearchIncludeFragment.searchModeString}">
                                <li>
                                    <h:outputLink value="#{widgetWrapper.wrapURL(page)}">
                                        <h:outputText value="#{bundle['dataverse.results.btn.sort.option.relevance']}" styleClass="#{SearchIncludeFragment.sortedByRelevance ? 'highlightBold' : ''}"/>
                                        <f:param name="q" value="#{SearchIncludeFragment.query}"/>
                                        <c:forEach items="#{SearchIncludeFragment.filterQueries}" var="clickedFilterQuery" varStatus="status">
                                            <f:param name="fq#{status.index}" value='#{clickedFilterQuery}'/>
                                        </c:forEach>
                                        <f:param name="types" value="#{SearchIncludeFragment.selectedTypesString}"/>
                                        <f:param name="page" value="1"/>
                                        <f:param name="sort" value="#{SearchIncludeFragment.searchFieldRelevance}"/>
                                        <f:param name="order" value="#{SearchIncludeFragment.DESCENDING}"/>
                                    </h:outputLink>
                                </li>
                            </ui:fragment>
                        </ul>
                    </div>
                </div>
            </div>

            <o:importFunctions type="org.omnifaces.el.functions.Strings" />
            <ui:param name="descriptionAbbreviationThreshold" value="280"/>
            <!--CARDS-->
            <h:dataTable id="resultsTable" styleClass="#{SearchIncludeFragment.searchResultsCount > 0 ? '' : 'resultsNone'}" value="#{SearchIncludeFragment.searchResultsList}" var="result"
                         rendered="#{SearchIncludeFragment.searchResultsList.size() > 0}">
                <h:column>
                    <ui:fragment rendered="#{SearchIncludeFragment.debug == true}">
                        <h:outputText value="score: #{result.score}" rendered="#{SearchIncludeFragment.mode == SearchIncludeFragment.searchModeString}"/>
                    </ui:fragment>
                    <!--DATAVERSE CARDS-->
                    <div class="dataverseResult clearfix" jsf:rendered="#{result.type == 'dataverses'}">
                        <div class="card-title-icon-block">
                            <span class="glyphicon glyphicon-link text-brand pull-right" title="#{bundle.linked}" jsf:rendered="#{!SearchIncludeFragment.rootDv and !result.isInTree}"/>
                            <span class="glyphicon glyphicon-new-window text-brand pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}"/>
                            <span class="icon-dataverse text-brand pull-right" title="#{bundle.dataverse}"/>
                            <c:set var="dvUrl" value="#{dataversePage}?alias=#{result.dataverseAlias}"/>
                            <h:outputLink value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dvUrl : widgetWrapper.wrapURL(dvUrl)}" target="#{!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}">
                                <h:outputText value="#{result.name} #{bundle.dataverse}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet == null}"/>
                                <h:outputText value="#{result.nameHighlightSnippet} #{bundle.dataverse}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{SearchIncludeFragment.debug == true}"/>
                            </h:outputLink>
                            <h:outputText value="(#{result.dataverseAffiliation})" styleClass="text-muted" style="margin-left: .5em;" rendered="#{!empty result.dataverseAffiliation and result.dataverseAffiliationHighlightSnippet == null}"/>
                            <h:outputText value="(#{result.dataverseAffiliationHighlightSnippet})" styleClass="text-muted" style="margin-left: .5em;" rendered="#{result.dataverseAffiliationHighlightSnippet != null}" escape="false"/>
                            <h:outputText value="#{SearchIncludeFragment.DRAFT}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                            <h:outputText value="#{result.userRole}" styleClass="label label-primary" rendered="#{!empty result.userRole}"/>
                            <h:outputText value="#{SearchIncludeFragment.UNPUBLISHED}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                        </div>
                        <div class="card-preview-icon-block text-center">
                            <h:outputLink value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dvUrl : widgetWrapper.wrapURL(dvUrl)}" target="#{!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{result.displayImage}"/>
                                <span class="icon-dataverse text-brand" jsf:rendered="#{!result.displayImage}"/>
                            </h:outputLink>
                        </div>

                        <h:outputText value="#{result.dateToDisplayOnCard}" styleClass="text-muted" style="margin-right:.5em;"/>

                        <c:set var="dvParentUrl" value="#{dataversePage}?alias=#{result.dataverseParentAlias}"/>
                        <h:outputLink value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dvParentUrl : widgetWrapper.wrapURL(dvParentUrl)}" target="#{!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView ? '_blank' : ''}" rendered="#{result.parent.id != SearchIncludeFragment.dataverse.id}">
                            <h:outputText value="#{result.parent.get('name')} #{bundle.dataverse}"/>
                        </h:outputLink>

                        <hr style="margin:.5em;border:0;"/>

                        <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>

                        <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                   rendered="#{result.descriptionSnippets.size() gt 0}">
                            <h:outputText value="#{snippet}" escape="false"/>
                            <h:outputText value="... " rendered="#{varStatus.last != true}"/>
                        </ui:repeat>

                        <ui:fragment rendered="#{false and result.matchedFields.size() > 0}">
                            <h:outputText value="#{bundle['dataverse.results.cards.foundInMetadata']} "/>
                            <ui:repeat value="#{result.matchedFields}" var="field" varStatus="varStatus">
                                <h:outputText value="#{field}"/>
                                <h:outputText value=", " rendered="#{varStatus.last != true}"/>
                            </ui:repeat>
                        </ui:fragment>

                        <ui:repeat value="#{result.highlightsAsList}" var="highlight" rendered="#{result.highlightsAsList.size() gt 0}">
                            <ui:repeat value="#{highlight.snippets}" var="snippet">
                                <div>
                                    <h:outputText value="#{highlight.solrField.nameSearchable}: #{snippet}" escape="false"/>
                                    <ui:param value="#{highlight.solrField.nameFacetable}:intentional" name="unfriendly"/>
                                    <!--<h:outputText value="#{SearchIncludeFragment.getFriendlyNamesFromFilterQuery('name:intentional').get(0)}"/>-->
                                    <!--<h:outputText value="#{SearchIncludeFragment.getFriendlyNamesFromFilterQuery(unfriendly).get(0)}: "/>-->
                                </div>
                            </ui:repeat>
                        </ui:repeat>
                    </div>
                    <!--DATASET CARDS-->
                    <div class="datasetResult clearfix" jsf:rendered="#{result.type == 'datasets'}">
                        <div class="card-title-icon-block">
                            <span class="glyphicon glyphicon-link text-info pull-right" title="#{bundle.linked}" jsf:rendered="#{!SearchIncludeFragment.rootDv and !result.isInTree}"/>
                            <span class="glyphicon glyphicon-new-window text-info pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}"/>
                            <span class="icon-dataset text-info pull-right" title="#{bundle.dataset}"/>
                            <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.datasetUrl : widgetWrapper.wrapURL(result.datasetUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:outputText value="#{result.title}" style="padding:4px 0;" rendered="#{result.titleHighlightSnippet == null}"/>
                                <h:outputText value="#{result.titleHighlightSnippet}" style="padding:4px 0;" rendered="#{result.titleHighlightSnippet != null}" escape="false"/>
                                <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{SearchIncludeFragment.debug == true}"/></a>

                            <h:outputText value="#{SearchIncludeFragment.DRAFT}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                            <h:outputText value="#{SearchIncludeFragment.IN_REVIEW}" styleClass="label label-success" rendered="#{result.inReviewState}"/>
                            <h:outputText value="#{SearchIncludeFragment.UNPUBLISHED}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                            <h:outputText value="#{SearchIncludeFragment.DEACCESSIONED}" styleClass="label label-danger" rendered="#{result.deaccessionedState}"/>
                            <h:outputText value="#{result.userRole}" styleClass="label label-primary" rendered="#{!empty result.userRole}"/>
                        </div>
                        <div class="card-preview-icon-block text-center">
                            <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.datasetUrl : widgetWrapper.wrapURL(result.datasetUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{result.displayImage}"/>
                                <span class="icon-dataset text-info" jsf:rendered="#{!result.displayImage}"/>
                            </a>
                        </div>

                        <h:outputText styleClass="text-muted" value="#{result.dateToDisplayOnCard}"/>

                        <h:outputText styleClass="text-muted" value=" - " rendered="#{result.parent.id != SearchIncludeFragment.dataverse.id}"/>
                        
                        <c:set var="dvParentAlias" value="#{dataversePage}?alias=#{result.dataverseAlias}"/>
                        <h:outputLink value="#{!SearchIncludeFragment.rootDv and !result.isInTree ? dvParentAlias : widgetWrapper.wrapURL(dvParentAlias)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}" rendered="#{result.parent.id != SearchIncludeFragment.dataverse.id}">
                            <h:outputText value="#{result.parent.get('name')} #{bundle.dataverse}"/>
                        </h:outputLink>

                        <div class="resultDatasetCitationBlock #{result.deaccessionedState ? 'alert alert-danger bg-danger' : 'alert alert-info bg-citation'}">
                            <h:outputText value="#{result.citationHtml != null ? result.citationHtml : result.citation}" escape="false"/>
                        </div>
                        
                        <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>

                        <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                   rendered="#{result.descriptionSnippets.size() gt 0}">
                            <h:outputText value="... #{snippet} ..." escape="false"/>
                        </ui:repeat>

                        <ui:fragment rendered="#{false and result.matchedFields.size() > 0}">
                            <h:outputText value="#{bundle['dataverse.results.cards.foundInMetadata']} "/>
                            <ui:repeat value="#{result.matchedFields}" var="field" varStatus="varStatus">
                                <h:outputText value="#{field}"/>
                                <h:outputText value=", " rendered="#{varStatus.last != true}"/>
                            </ui:repeat>
                        </ui:fragment>

                        <ui:repeat value="#{result.highlightsAsList}" var="highlight" rendered="#{result.highlightsAsList.size() > 0}">
                            <ui:repeat value="#{highlight.snippets}" var="snippet">
                                <div>
                                    <h:outputText value="#{highlight.displayName}: #{snippet}" escape="false"/>
                                    <!--<ui:param value="#{highlight.solrField.nameFacetable}:intentional" name="unfriendly"/>-->
                                    <!--<h:outputText value="#{SearchIncludeFragment.getFriendlyNamesFromFilterQuery('name:intentional').get(0)}"/>-->
                                    <!--<h:outputText value="#{SearchIncludeFragment.getFriendlyNamesFromFilterQuery(unfriendly).get(0)}: "/>-->
                                </div>
                            </ui:repeat>
                        </ui:repeat>

                        <div jsf:rendered="#{result.harvested and !empty result.harvestingDescription}" class="text-muted small margin-top-half">
                            <span class="glyphicon glyphicon-info-sign"/> <h:outputText value=" #{result.harvestingDescription}"/>
                        </div>
                    </div>
                    <!--FILE CARDS-->
                    <div class="fileResult clearfix" jsf:rendered="#{result.type == 'files'}">
                        <div class="card-title-icon-block">
                            <span class="glyphicon glyphicon-link text-muted pull-right" title="#{bundle.linked}" jsf:rendered="#{!SearchIncludeFragment.rootDv and !result.isInTree}"/>
                            <span class="glyphicon glyphicon-new-window text-muted pull-right" title="#{bundle.harvested}" jsf:rendered="#{result.harvested}"/>
                            <span class="icon-file text-muted pull-right" title="#{bundle.file}"/>

                            <span class="text-danger glyphicon glyphicon-lock" title="#{bundle.restricted}" jsf:rendered="#{result.entity.restricted and !permissionsWrapper.hasDownloadFilePermission(result.entity)}"/>
                            <span class="text-success icon-unlock" title="#{bundle.restrictedaccess}" jsf:rendered="#{result.entity.restricted and permissionsWrapper.hasDownloadFilePermission(result.entity)}"/>
                            <ui:fragment rendered="#{settingsWrapper.isTrueForKey(':ShowFileLandingPage', false)}">
                                <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.fileUrl : widgetWrapper.wrapURL(result.fileUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                    <h:outputText value="#{result.name}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet == null}"/>
                                    <h:outputText value="#{result.nameHighlightSnippet}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                    <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{SearchIncludeFragment.debug == true}"/></a>
                            </ui:fragment>
                            <ui:fragment rendered="#{!settingsWrapper.isTrueForKey(':ShowFileLandingPage', false)}">
                                <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.fileDatasetUrl : widgetWrapper.wrapURL(result.fileDatasetUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                    <h:outputText value="#{result.name}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet == null}"/>
                                    <h:outputText value="#{result.nameHighlightSnippet}" style="padding:4px 0;" rendered="#{result.nameHighlightSnippet != null}" escape="false"/>
                                    <h:outputText value=" (#{result.entityId})" style="padding:4px 0;" rendered="#{SearchIncludeFragment.debug == true}"/></a>
                            </ui:fragment>
                            <h:outputText value="#{SearchIncludeFragment.DRAFT}" styleClass="label label-primary" rendered="#{result.draftState}"/>
                            <h:outputText value="#{SearchIncludeFragment.IN_REVIEW}" styleClass="label label-success" rendered="#{result.inReviewState}"/>
                            <h:outputText value="#{SearchIncludeFragment.UNPUBLISHED}" styleClass="label label-warning" rendered="#{result.unpublishedState}"/>
                            <h:outputText value="#{result.userRole}" styleClass="label label-primary" rendered="#{!empty result.userRole}"/>
                        </div>

                        <div class="card-preview-icon-block text-center" jsf:rendered="#{settingsWrapper.isTrueForKey(':ShowFileLandingPage', false)}">
                            <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.fileUrl : widgetWrapper.wrapURL(result.fileUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{result.displayImage}"/>
                                <span class="icon-#{dataFileServiceBean.getFileClass(result.entity)} text-muted h1"
                                      jsf:rendered="#{!result.displayImage}"/>
                            </a>
                        </div>

                        <div class="card-preview-icon-block text-center" jsf:rendered="#{!settingsWrapper.isTrueForKey(':ShowFileLandingPage', false)}">
                            <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.fileDatasetUrl : widgetWrapper.wrapURL(result.fileDatasetUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:graphicImage value="#{result.imageUrl}" rendered="#{result.displayImage}"/>
                                <span class="icon-#{dataFileServiceBean.getFileClass(result.entity)} text-muted h1"
                                      jsf:rendered="#{!result.displayImage}"/>
                            </a>
                        </div>

                        <div>
                            <h:outputText styleClass="text-muted" value="#{result.dateToDisplayOnCard} - "/>
                            <a href="#{!SearchIncludeFragment.rootDv and !result.isInTree ? result.fileDatasetUrl : widgetWrapper.wrapURL(result.fileDatasetUrl)}" target="#{(!SearchIncludeFragment.rootDv and !result.isInTree and widgetWrapper.widgetView) or result.harvested ? '_blank' : ''}">
                                <h:outputText value="#{result.parent.get('name')}"/></a>
                        </div>

                        <div>
                            <h:outputText value="#{bundle['dataverse.results.cards.files.tabularData']}" styleClass="text-muted" rendered="#{!empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity)}"/>
                            <h:outputText value="#{result.filetype}" styleClass="text-muted" rendered="#{empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity) and result.fileTypeHighlightSnippet == null}"/>
                            <h:outputText value="#{result.fileTypeHighlightSnippet}" styleClass="text-muted" rendered="#{empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity) and result.fileTypeHighlightSnippet != null}" escape="false"/>

                            <h:outputText styleClass="text-muted" value=" - #{SearchIncludeFragment.dataFileSizeDisplay(result.entity)}" rendered="#{!result.harvested}" />

                            <h:outputText styleClass="text-muted" value=" - #{SearchIncludeFragment.dataFileChecksumDisplay(result.entity)}" rendered="#{!result.harvested and !SearchIncludeFragment.isTabular(result.entity)}"/>

                            <!-- if this is a tabular data file, extra information, such as the numbers of variables and observations and the unf, is displayed: -->
                            <h:outputText styleClass="text-muted" value=" - #{SearchIncludeFragment.tabularDataDisplayInfo(result.entity)}"
                                            rendered="#{!empty SearchIncludeFragment.tabularDataDisplayInfo(result.entity)}"/>
                        </div>

                        <div class="file-tags-block" jsf:rendered="#{(!empty result.fileCategories) or (!empty result.tabularDataTags)}">
                            <ui:repeat value="#{result.fileCategories}" var="cat">
                                <h:outputText value="#{cat}" styleClass="label label-default"/>
                            </ui:repeat>
                            <ui:repeat value="#{result.tabularDataTags}" var="tag">
                                <h:outputText value="#{tag}" styleClass="label label-info"/>
                            </ui:repeat>
                        </div>

                        <h:outputText value="#{Strings:abbreviate(result.descriptionNoSnippet, descriptionAbbreviationThreshold)}" rendered="#{result.descriptionSnippets.size() eq 0}"/>

                        <ui:repeat value="#{result.descriptionSnippets}" var="snippet" varStatus="varStatus"
                                   rendered="#{result.descriptionSnippets.size() gt 0}">
                            <h:outputText value="#{snippet}" escape="false"/>
                            <h:outputText value="... " rendered="#{varStatus.last != true}"/>
                        </ui:repeat>

                        <div jsf:rendered="#{result.highlightsAsList.size() > 0}">
                            <ui:repeat value="#{result.highlightsAsList}" var="highlight">
                                <ui:repeat value="#{highlight.snippets}" var="snippet">
                                    <div>
                                        <h:outputText value="#{highlight.displayName}: #{snippet}" escape="false"/>
                                    </div>
                                </ui:repeat>
                            </ui:repeat>
                        </div>

                        <div jsf:rendered="#{result.harvested and !empty result.harvestingDescription}">
                            <h:outputText value="#{result.harvestingDescription}" styleClass="text-muted" style="margin-right:.5em;"/>
                        </div>
                    </div>
                </h:column>
            </h:dataTable>
            <!-- BOTTOM PAGINATOR -->
            <ui:include src="search-include-pager.xhtml"></ui:include>
        </div>
    </div>

    <!-- this remote command is called once the page finishes its initial load,
            in order to display the images for the card -->
    <h:form>
        <p:remoteCommand name="postLoad"
                         process="@this"
                         update=":#{p:component('resultsTable')}"
                         actionListener="#{SearchIncludeFragment.setDisplayCardValues()}" />
    </h:form>

    <p:dialog header="#{bundle['dataverse.results.dialog.addDataGuest.header']}" widgetVar="addData_popup" modal="true">
        <p class="help-block">
            <span class="glyphicon glyphicon-warning-sign text-danger"/>
            <h:outputFormat styleClass="text-danger" value="#{dataverseHeaderFragment.signupAllowed ? bundle['dataverse.results.dialog.addDataGuest.msg.signup'] : bundle['dataverse.results.dialog.addDataGuest.msg']}" escape="false">
                <f:param value="#{navigationWrapper.redirectPage}"/>
            </h:outputFormat>
        </p>
        <div class="button-block">
            <button type="button" onclick="PF('addData_popup').hide()" class="btn btn-default" value="#{bundle.close}">
                #{bundle.close}
            </button>
        </div>
    </p:dialog>
    <script type="text/javascript">
        $(document).ready(function () {
            // Calls the p:remoteCommand postLoad.
            // Posted at end of fragment to work correctly with Account information
            <ui:remove>
            // See: https://github.com/IQSS/dataverse/issues/2004
            </ui:remove>
            postLoad();

            $('[data-toggle=offcanvas]').click(function() {
                $('.row-offcanvas').toggleClass('active', 200);
            });
        });
    </script>
</ui:composition>
