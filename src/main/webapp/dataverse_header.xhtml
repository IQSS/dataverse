<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:jsf="http://xmlns.jcp.org/jsf"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:o="http://omnifaces.org/ui"
                xmlns:of="http://omnifaces.org/functions"
                xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">
    <o:resourceInclude path="/CustomizationFilesServlet?customFileType=header" rendered="#{!widgetWrapper.widgetView}"/>
    <o:importFunctions type="edu.harvard.iq.dataverse.authorization.groups.impl.builtin.AuthenticatedUsers" />
    <ui:param name="showAddDataverseLink" value="#{permissionServiceBean.userOn(AuthenticatedUsers:get(),dataverseServiceBean.findRootDataverse()).canIssueCommand('CreateDataverseCommand') }"/>
    <ui:param name="showAddDatasetLink" value="#{permissionServiceBean.userOn(AuthenticatedUsers:get(),dataverseServiceBean.findRootDataverse()).canIssueCommand('AbstractCreateDatasetCommand') }"/>
    <ui:param name="showAddDataGroup" value="#{showAddDataverseLink or showAddDatasetLink}"/>

    <div id="dataverse-header-block" role="banner">
        <!-- Navbar Panel -->
        <nav id="navbarFixed" class="navbar navbar-default navbar-fixed-top" jsf:rendered="#{!widgetWrapper.widgetView}">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#topNavBar" aria-pressed="false">
                        <span class="sr-only">#{bundle.toggleNavigation}</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                   <!-- QDRCustom- Remove link-to-home logo -->
                    
                </div>
                <!-- QDRCustom- Menu Items -->
                <!-- Adding an element where the custom header javascript can pick up the Drupal URL -->
                <!-- If/when we remove the custom QDR menu, we should keep this one element -->
                <div id='qdrdrupalurl' style="display:none;">#{settingsWrapper.get(':QDRDrupalSiteURL')}</div>
            </div>
        </nav>
        <!-- Noscript Error -->
        <noscript>
            <div id="noscript-alert" class="bg-danger">
                <div class="alert container text-danger no-margin-bottom">
                    <h:outputText value="#{bundle['header.noscript']}"/>
                </div>
            </div>
        </noscript>
        <!-- Banner Message -->
        <o:form class="form-inline">
            <ui:fragment rendered="#{!empty dataverseHeaderFragment.bannerMessages}">
                <ui:repeat value="#{dataverseHeaderFragment.bannerMessages}" var="message" varStatus="status">                
                    <div id="status-alert" class="bg-warning" jsf:rendered="#{!empty message.displayValue }">
                        <div class="alert alert-dismissible container text-warning">
                            <p:commandButton class="close" id="closeButton" actionListener="#{dataverseSession.dismissMessage(message)}" update="@form" value="&#215;"/>
                            <h:outputText rendered="#{!empty message.displayValue }" value=" #{message.displayValue }" escape="false"/>
                        </div>
                    </div>
                </ui:repeat>
            </ui:fragment>
        </o:form>
        
        <!-- Header Panel -->
        <!-- FIXME: Rather than hard-coding "FFFFFF", get it from the backend (ThemeWidgetFragment.DEFAULT_BACKGROUND_COLOR). -->
        <div id="dataverseHeader" class="container bg-muted"
                style="background:##{!empty dataverse.dataverseTheme.backgroundColor ? dataverse.dataverseTheme.backgroundColor : 'FFFFFF'};"
                jsf:rendered="#{showDataverseHeader and !widgetWrapper.widgetView and !dataverseHeaderFragment.isRootDataverseThemeDisabled(dataverse)}">
            <o:importFunctions type="org.apache.commons.text.StringEscapeUtils"/>
            <!--  QDR - move status message -->
            <div>
                <h:outputLink value="#" onclick="PF('statusInfo').show()" rendered="#{!empty settingsWrapper.get(':StatusMessageText')}">
                    <span class="label label-warning status">#{!empty settingsWrapper.get(':StatusMessageHeader') ? settingsWrapper.get(':StatusMessageHeader') : bundle['header.status.header']}</span>
                </h:outputLink>
                <ui:fragment rendered="#{empty settingsWrapper.get(':StatusMessageText') and !empty settingsWrapper.get(':StatusMessageHeader')}">
                    <span class="label label-warning status">
                        <!--  QDR - allow html message -->
                        <h:outputText value="#{settingsWrapper.get(':StatusMessageHeader')}" escape="false"/>
                    </span>
                </ui:fragment>
            </div>
            <!-- FIXME: Rather than hard-coding "FFFFFF", get it from the backend (ThemeWidgetFragment.DEFAULT_LOGO_BACKGROUND_COLOR). -->
            <div class="dataverseHeaderLogo" style="text-align:#{!empty dataverse.dataverseTheme.logoAlignment ? dataverse.dataverseTheme.logoAlignment : 'center'};background:##{!empty dataverse.dataverseTheme.logoBackgroundColor ? dataverse.dataverseTheme.logoBackgroundColor : 'FFFFFF'};"
                 jsf:rendered="#{!empty dataverse.dataverseTheme.logo and dataverse.dataverseTheme.logoFormat == 'RECTANGLE'}">
                <img src="/logos/#{dataverse.logoOwnerId}/#{dataverse.dataverseTheme.logo}" alt="#{of:format1(bundle['alt.logo'], dataverse.name)}"/>
            </div>
            <div class="dataverseHeaderBlock">
                <div class="dataverseHeaderCell dataverseHeaderLogo" jsf:rendered="#{!empty dataverse.dataverseTheme.logo and dataverse.dataverseTheme.logoFormat == 'SQUARE'}">
                    <img src="/logos/#{dataverse.logoOwnerId}/#{dataverse.dataverseTheme.logo}" alt="#{of:format1(bundle['alt.logo'], dataverse.name)}"/>
                </div>
                <div class="dataverseHeaderCell dataverseHeaderName" jsf:rendered="#{editModeDataverse == 'CREATE'}">
                    <h:outputText styleClass="dataverseHeaderDataverseName" value="#{bundle.newDataverse}"/>
                </div>
                <div class="dataverseHeaderCell dataverseHeaderName" jsf:rendered="#{editModeDataverse != 'CREATE'}">
                    <a href="/dataverse/#{dataverse.alias}" class="dataverseHeaderDataverseName" style="color:##{!empty dataverse.dataverseTheme.linkColor ? dataverse.dataverseTheme.linkColor : '428bca'};"><h1>#{dataverse.name}</h1></a>
                    <h:outputText style="color:##{!empty dataverse.dataverseTheme.textColor ? dataverse.dataverseTheme.textColor : '666666'};" value=" (#{dataverse.affiliation})" rendered="#{!empty dataverse.affiliation}"/>
                    <h:outputText value="#{bundle.unpublished}" styleClass="label label-warning label-unpublished" rendered="#{!dataverse.released}"/>
                </div>
                <div class="dataverseHeaderCell dataverseHeaderTagline" jsf:rendered="#{!empty dataverse.dataverseTheme.tagline and empty dataverse.dataverseTheme.linkUrl}">
                    <h:outputText escape="false" style="color:##{!empty dataverse.dataverseTheme.textColor ? dataverse.dataverseTheme.textColor : '666666'};" value="#{StringEscapeUtils:escapeHtml4(dataverse.dataverseTheme.tagline)}" />
                </div>
                <div class="dataverseHeaderCell dataverseHeaderLink" jsf:rendered="#{!empty dataverse.dataverseTheme.tagline and !empty dataverse.dataverseTheme.linkUrl}">
                    <h:outputLink value="#{dataverse.dataverseTheme.linkUrl}" style="color:##{!empty dataverse.dataverseTheme.linkColor ? dataverse.dataverseTheme.linkColor : '428bca'};" target="_blank" rel="noopener">
                        <h:outputText value="#{StringEscapeUtils:escapeHtml4(dataverse.dataverseTheme.tagline)}" escape="false"/>
                    </h:outputLink>
                </div>
            </div>
        </div>
        <p:fragment id="breadCrumbPanel" rendered="#{dataverseHeaderFragment.breadcrumbs.size() > 1}">
        <div id="breadcrumbNavBlock" class="container" jsf:rendered="#{dataverseHeaderFragment.breadcrumbs.size() > 1}">
            <ui:repeat value="#{dataverseHeaderFragment.breadcrumbs}" var="breadcrumb" varStatus="status">
                <h:outputText value=" > " styleClass="breadcrumbCarrot" rendered="#{!status.first}"/>
                <div class="breadcrumbBlock">
                    
                    <!-- TO-DO, REMOVED HIGHLIGHTED CURRENT PAGE TITLE WITH false RENDER, NEED TO MOVE TO PGS...??? -->
                    <h:outputText value="#{breadcrumb.breadcrumbText}" styleClass="#{'breadcrumbActive'}" rendered="#{false}"/>
                    
                    <ui:fragment rendered="#{!status.last}">
                        <h:outputText value="#{breadcrumb.breadcrumbText}" rendered="#{!breadcrumb.dvObject.instanceofDataverse and !breadcrumb.dvObject.instanceofDataset and !breadcrumb.dvObject.instanceofDataFile and empty breadcrumb.url}"/>
                        <ui:fragment rendered="#{breadcrumb.dvObject == null and !empty breadcrumb.url}">
                            <ui:remove><!-- No widget code for admin pgs that would never display in widget --></ui:remove>
                            <a id="breadcrumbLnk#{status.index}" href="${breadcrumb.url}">
                                <h:outputText value="#{breadcrumb.breadcrumbText}"/>
                            </a>
                        </ui:fragment>
                        <ui:fragment rendered="#{breadcrumb.dvObject.instanceofDataverse}">
                            <c:set var="dvUrl" value="/dataverse/#{breadcrumb.dvObject.alias}"/>
                            <a id="breadcrumbLnk#{status.index}" href="#{widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? widgetWrapper.wrapURL(dvUrl) : dvUrl}" target="#{!widgetWrapper.widgetView or widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? '' : '_blank'}" rel="#{!widgetWrapper.widgetView or widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? '' : 'noopener'}">
                                <h:outputText value="#{breadcrumb.breadcrumbText}"/>
                            </a>
                        </ui:fragment>
                        <ui:fragment rendered="#{breadcrumb.dvObject.instanceofDataset}">
                            <c:set var="dsUrl" value="/dataset.xhtml?persistentId=#{breadcrumb.dvObject.globalIdString}#{breadcrumb.optionalUrlExtension }"/>
                            <a id="breadcrumbLnk#{status.index}" href="#{widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? widgetWrapper.wrapURL(dsUrl) : dsUrl}" target="#{!widgetWrapper.widgetView or widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? '' : '_blank'}" rel="#{!widgetWrapper.widgetView or widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? '' : 'noopener'}">
                                <h:outputText value="#{breadcrumb.breadcrumbText}"/>
                            </a>
                        </ui:fragment>
                        <ui:fragment rendered="#{breadcrumb.dvObject.instanceofDataFile}">
                            <c:set var="dsUrl" value="/file.xhtml?fileId=#{breadcrumb.dvObject.id}#{breadcrumb.optionalUrlExtension }"/>
                            <a id="breadcrumbLnk#{status.index}" href="#{widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? widgetWrapper.wrapURL(dsUrl) : dsUrl}" target="#{!widgetWrapper.widgetView or widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? '' : '_blank'}" rel="#{!widgetWrapper.widgetView or widgetWrapper.isWidgetTarget(breadcrumb.dvObject) ? '' : 'noopener'}">
                                <h:outputText value="#{breadcrumb.breadcrumbText}"/>
                            </a>
                        </ui:fragment>
                    </ui:fragment>
                </div>
            </ui:repeat>
        </div>
	</p:fragment>
        <ui:remove>
            <!-- Removing this temporarily until we can fix the performance issues with it;
                 replaced with generic bookmarks; will have to see how to best make this work
                 ...ALSO removed the 'bs/js/bootstrap-hover-dropdown.min.js' resource that this dropdown menu used;
                 if/when this breadcrumb dropdown menu is restored to the UI, add the latest version of the js plugin from:
                 https://github.com/CWSpear/bootstrap-hover-dropdown -->
            <div class="dropdown #{dataverseHeaderFragment.hasVisibleChildren(dv) ? 'dropdown-toggle keep-on' : ''}" data-delay="#{dataverseHeaderFragment.hasVisibleChildren(dv) ? '800' : ''}" data-hover="#{dataverseHeaderFragment.hasVisibleChildren(dv) ? 'dropdown' : ''}" data-target="#{dataverseHeaderFragment.hasVisibleChildren(dv) ? '#' : ''}" data-close-others="#{dataverseHeaderFragment.hasVisibleChildren(dv) ? 'true' : ''}">
                <h:outputText value="#{dv.name}" styleClass="#{dataverse.id == dv.id ? 'breadcrumbActive' : ''}" rendered="#{dataverse.id == dv.id and dataset == null}"/>
                <ui:fragment rendered="#{dataverse.id != dv.id or dataset != null}" >
                    <a id="breadcrumbLnk#{status.index}" href="/dataverse/#{dv.alias}">
                        <h:outputText value="#{dv.name}"/>
                    </a>
                </ui:fragment>
                <ui:fragment rendered="#{dataverseHeaderFragment.hasVisibleChildren(dv)}">
                    <a id="dataverse" styleClass="#{dataverse.id == dv.id ? 'breadcrumbActive' : ''}" role="button">
                        <span class="glyphicon glyphicon-chevron-down"></span>
                    </a>
                </ui:fragment>
            </div>
            <div class="dropdown-menu" aria-labelledby="breadcrumbLnk#{status.index}" rendered="#{dataverseHeaderFragment.hasVisibleChildren(dv)}">
                <p:tree value="#{dataverseHeaderFragment.getDataverseTree(dv)}" var="node"  cache="true" id="tree">
                    <p:treeNode>
                        <h:outputText value="#{node.name}" styleClass="breadcrumbActive" rendered="#{dataverse.id == node.id and dataset == null}"/>
                        <h:outputLink value="/dataverse/#{node.alias}" rendered="#{dataverse.id != node.id or dataset != null}">
                            <h:outputText value="#{node.name}"/>
                        </h:outputLink>
                    </p:treeNode>
                </p:tree>
            </div>
        </ui:remove>
        <!-- Message Panel -->
        <p:fragment id="messagePanel" rendered="#{showMessagePanel}">
            <div class="container messagePanel">
                <ui:remove>
                    <!--change this to <h:messages id="messages"/> to see otherwise hidden errors such as `Conversion Error setting value 'foo.jpg' for 'null Converter'`-->
                </ui:remove>
                <iqbs:messages id="messages" collapsible="true" />
            </div>
        </p:fragment>
    </div>
</ui:composition>