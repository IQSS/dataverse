<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
    xmlns:jsf="http://xmlns.jcp.org/jsf"
    xmlns:pt="http://java.sun.com/jsf/passthrough"
    xmlns:cc="http://java.sun.com/jsf/composite"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:of="http://omnifaces.org/functions"
    xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">
    
    <ui:remove>
    <!--
    If you include this fragment, you must also include file-edit-popup-fragment.xhtml
    
    This can be used for a single, specific file (passing "fileMetadata") or a group of selected files.
    
    Parameters:        
    fileMetadata - for single file, the fileMetadata object of that file
    fileMetadataForAction - used by DatasetPage popups to identify single file (also clears for selected file)
    isDraftReplacementFile - for single file, if the file is a draft and already replacing a past file 
    configureTools - for single file, list of configureTools for the file
    bean - the named value of the backing bean for the below method(s), also used by isFilePg param
    unrestrictFileAction - name of the method on the above bean to call for unrestrict (method must take a boolean)    
    editFileAction - for selected files, name of method on the above bean to send for edit metadata
    refreshTagsPopoupAction - for selected files, name of method on the above bean to refresh tags popup
    -->            
    </ui:remove>
    
    <ui:param name="isFilePg" value="#{of:isInstance('edu.harvard.iq.dataverse.FilePage', bean)}"/>


    <!-- Edit Options -->
    <li>
        <p:commandLink onclick="if (!(#{fileMetadata!=null} || testFilesSelectedForEditMetadata()))
                    return false;"                        
                       oncomplete="if(#{fileMetadata!=null}) window.location.assign('/editdatafiles.xhtml?selectedFileIds=#{fileMetadata.dataFile.id}&#38;datasetId=#{fileMetadata.datasetVersion.dataset.id}#{isFilePg?'&#38;mode=SINGLE':''}&#38;version=#{fileMetadata.datasetVersion.version}')"
                       action="#{bean[editFileAction]()}">
            <h:outputText value="#{bundle['file.metadata']}"/>
        </p:commandLink>
    </li>

    <ui:fragment rendered="#{!settingsWrapper.publicInstall}">
        <ui:fragment rendered="#{fileMetadata == null or !fileMetadata.restricted}">
            <li>
                <p:commandLink  update="@([id$=accessPopup])" 
                                onclick="if (!(#{fileMetadata!=null} || testFilesSelectedForRestriction()))
                                            return false;" 
                                oncomplete="PF('accessPopup').show()">
                    <f:setPropertyActionListener target="#{fileMetadataForAction}" value="#{fileMetadata}" />
                    <h:outputText value="#{bundle['file.restrict']}"/>
                </p:commandLink>
            </li>
        </ui:fragment>
        <ui:fragment rendered="#{fileMetadata == null or fileMetadata.restricted}">
            <li>
                <p:commandLink  
                    onclick="if (!(#{fileMetadata!=null} || testFilesSelectedForUnRestriction()))
                                return false;" 
                    action="#{bean[unrestrictFileAction](false)}">
                    <f:setPropertyActionListener target="#{fileMetadataForAction}" value="#{fileMetadata}" />
                    <h:outputText value="#{bundle['file.unrestrict']}"/>
                </p:commandLink>
            </li>         
        </ui:fragment>   
    </ui:fragment>

    <!-- TO-DO #7342 - ADD REPLACE FOR SINGLE FILE-->      
    <ui:fragment rendered="#{isFilePg}">
        <ui:fragment rendered="#{fileMetadata.dataFile.released and !isDraftReplacementFile}">                                        
            <li><!-- start: replace file link -->
                <h:outputLink value="/editdatafiles.xhtml?mode=SINGLE_REPLACE&#38;datasetId=#{fileMetadata.datasetVersion.dataset.id}&#38;fid=#{fileMetadata.dataFile.id}&#38;version=#{fileMetadata.datasetVersion.version}">
                    <h:outputText value="#{bundle['file.replace']}"/>
                </h:outputLink>
                <!-- end replace file link --></li>
        </ui:fragment>
        <ui:fragment rendered="#{((fileMetadata.dataFile.released and draftReplacementFile) or (!fileMetadata.dataFile.released and fileMetadata.datasetVersion.dataset.released)) }">                                        
            <li><!-- start: already replaced replace file link -->
                <p:commandLink title="#{bundle['file.delete']}" onclick="PF('fileAlreadyReplacedDraft').show();">
                    <h:outputText value="#{bundle['file.replace']}"/>
                </p:commandLink>
                <!-- end replace file link --></li>
        </ui:fragment>
    </ui:fragment>

    <!-- TO-DO #3488 - ADD FILE TAGS FOR FILE PG AND SINGLE FILE-->    
    <ui:fragment rendered="#{fileMetadata==null}">    
        <li>
            <p:commandLink      update="@([id$=fileTagsPopup])" 
                                onclick="if (!(#{fileMetadata!=null} || testFilesSelectedForTags()))
                                            return false;" 
                                oncomplete="PF('fileTagsPopup').show();"
                                action="#{bean[refreshTagsPopoupAction]()}">            
                <h:outputText value="#{bundle['file.tags']}"/>
            </p:commandLink>    
        </li>  
    </ui:fragment> 

    <!-- TO-DO #7342 - ADD PROVENANCE FOR SINGLE FILE-->    
    <ui:fragment rendered="#{isFilePg and systemConfig.provCollectionEnabled}">
        <li>
            <p:commandLink
                update="@([id$=editProvenancePopup])"
                oncomplete="PF('editProvenancePopup').show();bind_bsui_components();">
                <f:actionListener binding="#{provPopupFragmentBean.updatePopupState(fileMetadata, true)}" /> <!--clearProvenanceUpdates() -->
                #{bundle['file.provenance']} 
            </p:commandLink>
        </li> 
    </ui:fragment>     

    <li>
        <p:commandLink title="#{bundle['file.delete']}" update="@([id$=deleteFileConfirm])" 
                       onclick="if (!(#{fileMetadata!=null} || testFilesSelectedForDelete()))
                                   return false;" 
                       oncomplete="PF('deleteFileConfirmation').show();">
            <f:setPropertyActionListener target="#{fileMetadataForAction}" value="#{fileMetadata}" />                
            <h:outputText value= "#{bundle['file.delete']}"/>
        </p:commandLink>
    </li>


    <!---Modular configure-->
    <ui:fragment rendered="#{configureTools.size() > 0}">		
        <ui:include src="file-configure-dropdown-fragment.xhtml">
            <ui:param name="configureTools" value="#{configureTools}"/>
            <ui:param name="fileId" value="#{fileMetadata.dataFile.id}"/>
            <ui:param name="fileMetadata" value="#{fileMetadata}"/>				
        </ui:include>		
    </ui:fragment>
  
</ui:composition>