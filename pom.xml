<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--
    If you are doing more than bumping the version number, please read
    doc/sphinx-guides/source/developers/dependencies.rst	
    -->
    <groupId>edu.harvard.iq</groupId>
    <artifactId>dataverse</artifactId>
    <version>4.10.1</version>
    <packaging>war</packaging>

    <name>dataverse</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<additionalparam>-Xdoclint:none</additionalparam>
        <!-- Needed to avoid IDEA IDE compilation failures. See commits in GH #5059 -->
        <compilerArgument></compilerArgument>
        <project.timezone>UTC</project.timezone>
        <project.language>en</project.language>
        <project.region>US</project.region>
        <!--
            Moving this from plugin config to global config, because of GH-5122.
            This seems to play well with NetBeans 8.2, IDEA 2018.1 and mvn including compatibility with JaCoCo.
        -->
        <argLine>-Duser.timezone=${project.timezone} -Dfile.encoding=${project.build.sourceEncoding} -Duser.language=${project.language} -Duser.region=${project.region}</argLine>
    
        <aws.version>1.11.172</aws.version>
        <jackson.version>2.9.6</jackson.version>
        <commons.logging.version>1.2</commons.logging.version>
        <httpcomponents.client.version>4.5.5</httpcomponents.client.version>
        
        <junit.version>4.12</junit.version>
        <junit.jupiter.version>5.3.1</junit.jupiter.version>
        <junit.vintage.version>5.3.1</junit.vintage.version>
        <junit.platform.version>1.3.1</junit.platform.version>
        <mockito.version>2.22.0</mockito.version>
        <!--
        Jacoco 0.8.2 seems to break Netbeans code coverage integration so we'll use 0.8.1 instead.
        See https://github.com/jacoco/jacoco/issues/772 for discussion of how the XML changed.
        -->
        <jacoco.version>0.8.1</jacoco.version>
    </properties>

    <!--Maven checks for dependendies from these repos in the order shown in the pom.xml
        This isn't well documented and seems to change between maven versions -MAD 4.9.4 -->
    <repositories>
        <repository>
            <id>central-repo</id>
            <name>Central Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>prime-repo</id>
            <name>PrimeFaces Maven Repository</name>
            <url>http://repository.primefaces.org</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>dataone.org</id>
            <url>http://maven.dataone.org</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>dvn.private</id>
            <name>Local repository for hosting jars not available from network repositories.</name>
            <url>file://${project.basedir}/local_lib</url>
        </repository>
    </repositories>
    
    <!-- Transitive dependencies, bigger library "bill of materials" (BOM) and
         versions of dependencies used both directly and transitive are managed here. -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${aws.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons.logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpcomponents.client.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <!-- Declare any DIRECT dependencies here.
         In case the depency is both transitive and direct (e. g. some common lib for logging),
         manage the version above and add the direct dependency here WITHOUT version tag, too.
    -->
    <!-- TODO: Housekeeping is utterly needed. -->
    <dependencies>
        <dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.9</version>
        </dependency>
        <!-- BEGIN Data Deposit API v1 (SWORD v2) -->
        <dependency>
            <groupId>org.swordapp</groupId>
            <artifactId>sword2-server</artifactId>
            <version>1.0</version>
            <type>jar</type>
            <classifier>classes</classifier>
        </dependency>
        <dependency>
            <groupId>org.swordapp</groupId>
            <artifactId>sword2-server</artifactId>
            <!--
            Built from https://github.com/IQSS/swordv2-java-server-library
            to return a proper SWORD error message rather than a Glassfish
            Exception per https://github.com/IQSS/dataverse/issues/893
            If the fix is merged upstream at
            https://github.com/swordapp/JavaServer2.0/issues/6
            we can switch back to the official SWORD library.
            -->
            <version>1.1-SNAPSHOT</version>
            <type>war</type>
            <exclusions>
              <exclusion>
                 <groupId>xerces</groupId>  
                 <artifactId>xercesImpl</artifactId> 
              </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <!-- Once on Eclipse Glassfish 5.1 or Payara 5.x, this should be changed to aws-java-sdk-s3,
                 rendering the WAR much lighter. The version tag needs to be removed then, too. -->
            <artifactId>aws-java-sdk-bundle</artifactId>
            <version>${aws.version}</version>
        </dependency>
        <dependency>
            <!-- required by org.swordapp.server.sword2-server -->
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-core</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <!-- required by org.swordapp.server.sword2-server -->
            <groupId>org.apache.abdera</groupId>
            <artifactId>abdera-parser</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <!-- required by org.swordapp.server.sword2-server -->
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <!-- a dependency of commons-fileupload, but newer version required by tika -->
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.4</version>
            <scope>compile</scope>
        </dependency>
        <!-- Should be refactored and removed once on Java EE 8 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <!-- Should be refactored and removed once on Java EE 8 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <!-- required by org.swordapp.server.sword2-server -->
            <groupId>com.io7m.xom</groupId>
            <artifactId>xom</artifactId>
            <version>1.2.10</version>
        </dependency>
        <!-- END Data Deposit API v1 (SWORD v2) -->
        <dependency>
            <!-- There are later versions of this lib available at jitpack.io,
                 but it seemed better to not add another repo. -->
            <groupId>org.everit.json</groupId>
            <artifactId>org.everit.json.schema</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.3m</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>6.2</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>all-themes</artifactId>
            <version>1.0.10</version>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
            <version>2.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>1.7</version> <!-- Or 1.8-SNAPSHOT -->
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.0.3.Final</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>7.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>colt</groupId>
            <artifactId>colt</artifactId>
            <version>1.2.0</version>
        </dependency>
        <!-- fits.jar, not available from network repos, supplied in local_lib -->
        <dependency>
            <groupId>nom.tam.fits</groupId>
            <artifactId>fits</artifactId>
            <version>2012-10-25-generated</version>
        </dependency>
        <dependency>
            <groupId>net.handle</groupId>
            <artifactId>handle</artifactId>
            <version>2006-06-16-generated</version>
        </dependency>
        <!-- UNF v5 (buggy), (temporarily) added for testing ingest against DVN v3  - L.A. -->
        <dependency>
            <groupId>edu.harvard.iq.dvn</groupId>
            <artifactId>unf5</artifactId>
            <version>5.0</version>
        </dependency>
        <!-- (new) UNF v6: -->
        <dependency>
            <groupId>org.dataverse</groupId>
            <artifactId>unf</artifactId>
            <version>6.0</version>
        </dependency>
        <!-- Rosuda Rengine and Rserve, packaged by org.nuiton.thirdparty -->
        <!-- TODO: see if there's another, better maintained maven repository for Rosuda libraries? - L.A. -->
        <dependency>
            <groupId>org.nuiton.thirdparty</groupId>
            <artifactId>REngine</artifactId>
            <version>0.6-1</version>
        </dependency>
        <dependency>
            <groupId>org.nuiton.thirdparty</groupId>
            <artifactId>Rserve</artifactId>
            <version>0.6-1</version>
        </dependency>
        <!-- Apache POI - used by ingest to parse MS Excel xslx files -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-examples</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>edu.harvard.hul.ois.jhove</groupId>
            <artifactId>jhove</artifactId>
            <version>1.11.0</version>
        </dependency>
        <dependency>
            <groupId>edu.harvard.hul.ois.jhove</groupId>
            <artifactId>jhove-module</artifactId>
            <version>1.11.0</version>
        </dependency>
        <dependency>
            <groupId>edu.harvard.hul.ois.jhove</groupId>
            <artifactId>jhove-handler</artifactId>
            <version>1.11.0</version>
        </dependency>
        <!-- JAI (Java Advanced Imaging) jars: -->
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-core</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-servlet</artifactId>
            <version>3.4.2.Final</version>
        </dependency>
        <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-config-prettyfaces</artifactId>
            <version>3.4.2.Final</version>
        </dependency>
        <dependency>
            <groupId>edu.ucsb.nceas</groupId>
            <artifactId>ezid</artifactId>
            <version>1.0.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.11.3</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.4.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Added specific versionf of SLF4J jars; otherwise we end up with
        conflicting versions of slf4j-api and slf4j-log4j12, loaded as
        dependencies for different packages; which was causing some incompatibility
        issues -L.A. 4.3 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Added for DataCite -->
        <!--dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
        </dependency -->
        <dependency>
            <groupId>axis</groupId>
            <artifactId>axis</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>io.searchbox</groupId>
            <artifactId>jest</artifactId>
            <version>0.1.7</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.9</version>
        </dependency>
	<!-- JavaSwift/JOSS: for accessing OpenStack cloud storage -->
        <dependency>
            <groupId>org.javaswift</groupId>
            <artifactId>joss</artifactId>
            <version>0.10.0</version>
        </dependency>
        <dependency>
            <groupId>com.maxmind.geoip2</groupId>
            <artifactId>geoip2</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- OAuth2 authentication. -->
        <dependency>
            <groupId>com.github.scribejava</groupId>
            <artifactId>scribejava-apis</artifactId>
            <version>3.1.0</version>
        </dependency>
	<!-- EXPERIMENTAL: -->
	<!-- lyncode xoai OAI-PMH implementation: -->
	<!-- unfortunately, their 4.10 version -->
	<!-- is still buggy. As an experiment, I'm using -->
	<!-- a patched version I built locally. -->
	<!-- (pull requests pending - L.A. -->
	<dependency>
	  <groupId>com.lyncode</groupId>
	  <artifactId>xoai-common</artifactId>
	  <version>4.1.0-header-patch</version>
	</dependency>
	<dependency>
	  <groupId>com.lyncode</groupId>
	  <artifactId>xoai-data-provider</artifactId>
	  <version>4.1.0-header-patch</version>
	</dependency>
        <dependency>
	  <groupId>com.lyncode</groupId>
	  <artifactId>xoai-service-provider</artifactId>
	  <version>4.1.0-header-patch</version>
	</dependency>
        <!-- Added for AutoService -->
        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>1.0-rc2</version>
            <optional>true</optional>
            <type>jar</type>
        </dependency>
        <!-- For API File Upload: 1 of 2 -->
        <dependency>
           <groupId>org.glassfish.jersey.containers</groupId>
           <artifactId>jersey-container-servlet</artifactId>
           <version>2.23.2</version>
       </dependency>
        <!-- For API File Upload: 2 of 2 -->
       <dependency>
           <groupId>org.glassfish.jersey.media</groupId>
           <artifactId>jersey-media-multipart</artifactId>
           <version>2.23.2</version>
       </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
        </dependency>
        <!-- BagIt export -->
        <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.18</version>
		</dependency>
	    <dependency>
            <groupId>org.duracloud</groupId>
            <artifactId>common</artifactId>
            <version>4.4.6</version>
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.duracloud</groupId>
            <artifactId>storeclient</artifactId>
            <version>4.4.6</version>
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
              </exclusion>
              <exclusion>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sqs</artifactId>
              </exclusion>
            </exclusions>
            
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>
        <!--  Full text indexing -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <version>1.19</version>
        </dependency>
    </dependencies>

    <build>
<!--        <testResources>
            <testResource>
                <directory>${project.basedir}/src/main/resources</directory>
            </testResource>
        </testResources>-->
<!--        <testResources>
            <testResource>
              <directory>${project.basedir}/src/test/java</directory>
              <excludes>
                  <exclude>**/*.java</exclude>
              </excludes>
            </testResource>
            <testResource>
              <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
          </testResources>-->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>*.properties</include>
                    <include>**/mime.types</include>
                    <include>**/*.R</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                    <!-- for use with `mvn -DcompilerArgument=-Xlint:unchecked compile` -->
                    <compilerArgument>${compilerArgument}</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
		    <attachClasses>true</attachClasses>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>7.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <destfile>${basedir}/target/coverage-reports/jacoco-unit.exec</destfile>
                    <datafile>${basedir}/target/coverage-reports/jacoco-unit.exec</datafile>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.0.0</version>
            </plugin>
            <!-- v4.8: The truezip-maven-plugin below deletes two copies of a file that the AWS SDK bundle
            includes called javamail.providers which breaks system emails. - bsilverstein 8/8/2017 -->
            <!-- Once on Eclipse Glassfish 5.1 or Payara 5.x and changing to aws-java-sdk-s3, this can be deleted. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>truezip-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <id>remove-javamail-providers-from-exploded</id>
                        <goals>
                            <goal>remove</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <fileset>
                                <directory>target/dataverse-${project.version}/WEB-INF/lib/aws-java-sdk-bundle-${aws.version}.jar/META-INF</directory>
                                <includes>
                                    <include>javamail.providers</include>
                                </includes>
                            </fileset>
                        </configuration>
                    </execution>
                    <execution>
                        <id>remove-javamail-providers-from-war</id>
                        <goals>
                            <goal>remove</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <fileset>
                                <directory>target/dataverse-${project.version}.war/WEB-INF/lib/aws-java-sdk-bundle-${aws.version}.jar/META-INF</directory>
                                <includes>
                                    <include>javamail.providers</include>
                                </includes>
                            </fileset>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- https://stackoverflow.com/questions/46177921/how-to-run-unit-tests-in-excludedgroups-in-maven -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <!-- testsToExclude come from the profile-->
                    <excludedGroups>${testsToExclude}</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
      <profile>
        <id>dev</id>
        <activation>
            <!-- https://stackoverflow.com/questions/11824328/default-build-profile-for-maven -->
            <!-- We set dev to true to developers don't have to run non-essential tests over and over. -->
          <activeByDefault>true</activeByDefault>
        </activation>
        <properties>
            <testsToExclude>edu.harvard.iq.dataverse.NonEssentialTests</testsToExclude>
        </properties>
      </profile>
      <profile>
        <id>all-unit-tests</id>
      </profile>
      <!-- TODO: Add a profile to run API tests (integration tests that end in IT.java. See conf/docker-aio/run-test-suite.sh -->
    </profiles>
</project>
