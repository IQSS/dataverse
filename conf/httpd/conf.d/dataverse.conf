# don't pass paths used by rApache and TwoRavens to Glassfish
ProxyPassMatch ^/RApacheInfo$ !
ProxyPassMatch ^/dataexplore !
ProxyPassMatch ^/custom !
ProxyPassMatch ^/rookzelig !
# don't pass paths used by Shibboleth to Glassfish
ProxyPassMatch ^/Shibboleth.sso !
ProxyPassMatch ^/shibboleth-ds !
ProxyPassMatch ^/error-documents !
# pass everything else to Glassfish
ProxyPass / ajp://localhost:8009/

#<Location /shib.xhtml>
#  AuthType shibboleth
#  ShibRequestSetting requireSession 1
#  require valid-user
#</Location>

ErrorDocument 503 /error-documents/503.html
Alias /error-documents /var/www/dataverse/error-documents

# From https://wiki.apache.org/httpd/RewriteHTTPToHTTPS

RewriteEngine On
# This will enable the Rewrite capabilities

RewriteCond %{HTTPS} !=on
# This checks to make sure the connection is not already HTTPS

# expose 8181 from glassfish (https) as workaround for https://github.com/IQSS/dataverse/issues/2013
#RewriteRule ^/api/access/datafile/?(.*) https://%{SERVER_NAME}:8181/api/access/datafile/$1 [R,L]
# enforce https: https://github.com/IQSS/dataverse/issues/56
#RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]
#
# This rule will redirect users from their original location, to the same location but using HTTPS.
# i.e.  http://www.example.com/foo/ to https://www.example.com/foo/
# The leading slash is made optional so that this will work either in httpd.conf
# or .htaccess context

# [#GLASSFISH-20694] Glassfish 4.0 and jk Unable to populate SSL attributes - Java.net JIRA - https://java.net/jira/browse/GLASSFISH-20694
#SSLOptions +StdEnvVars +ExportCertData
