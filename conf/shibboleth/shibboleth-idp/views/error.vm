##
## Velocity Template for error end-state
##
## Velocity context will contain the following variables during controlled errors.
##
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## encoder - HTMLEncoder class
## cspDigester - Calculates base64-encoded SHA-2 hashes (call apply)
## cspNonce - Calculates secure nonces (call generateIdentifier)
## custom - arbitrary object injected by deployer
##
## Some error paths involve runtime exceptions handled outside Spring Web Flow by the
## MVC layer and will not generally populate these variables:
##
## flowRequestContext - the Spring Web Flow RequestContext
## profileRequestContext - root of context tree
##
#set ($title = $springMacroRequestContext.getMessage("idp.title", "Web Login Service"))
#set ($defaultTitleSuffix = $springMacroRequestContext.getMessage("idp.title.suffix", "Error"))
##
#if ($flowRequestContext)
	## This handles flow events, the most common case.
    #set ($eventId = $flowRequestContext.getCurrentEvent().getId())
    #set ($eventKey = $springMacroRequestContext.getMessage("$eventId", "error"))
    #set ($titleSuffix = $springMacroRequestContext.getMessage("${eventKey}.title", "$defaultTitleSuffix"))
    #set ($message = $springMacroRequestContext.getMessage("${eventKey}.message", "$defaultTitleSuffix: $eventId"))
    #if ($eventId == "AccessDenied" or $eventId == "ContextCheckDenied")
        $response.setStatus(403)
    #elseif ($eventId == "AttributeReleaseRejected" || $eventId == "TermsRejected")
        $response.setStatus(200)
    #elseif ($eventKey == "unexpected" || $eventKey == "runtime-error" || $eventKey == "error")
        $response.setStatus(500)
    #else
        $response.setStatus(400)
    #end
#elseif ($exception)
	## This handles exceptions that reach the Spring-MVC exception handler.
    #set ($eventId = $exception.getClass().getSimpleName())
    #set ($eventKey = $springMacroRequestContext.getMessage("$eventId", "error"))
    #set ($titleSuffix = $springMacroRequestContext.getMessage("${eventKey}.title", "$defaultTitleSuffix"))
    #set ($message = $springMacroRequestContext.getMessage("${eventKey}.message", "$defaultTitleSuffix: $eventId"))
    $response.setStatus(500)
#else
	## This is a catch-all that theoretically shouldn't happen?
    #set ($titleSuffix = $defaultTitleSuffix)
    #set ($message = $springMacroRequestContext.getMessage("idp.message", "An unidentified error occurred."))
    $response.setStatus(500)
#end
##
$response.addHeader("Content-Security-Policy", "script-src 'none'")
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0">
        <link rel="stylesheet" type="text/css" href="$request.getContextPath()#springMessageText("idp.css", "/css/placeholder.css")">
    </head>
  	
    <body>
        <main class="main">
            <header>
                <img class="main-logo" src="$request.getContextPath()#springMessageText("idp.logo", "/images/placeholder-logo.png")" alt="#springMessageText("idp.logo.alt-text", "logo")" />
            </header>
            
            <section>
                <h1>$title - $titleSuffix</h1>
                <p>#evaluate($message)</p>
            </section>
        </main>
        <footer class="footer">
            <div class="cc">
                <p>#springMessageText("idp.footer", "Insert your footer text here.")</p>
            </div>
        </footer>
    </body>
</html>
